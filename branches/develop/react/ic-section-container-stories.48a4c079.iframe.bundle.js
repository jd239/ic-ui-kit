"use strict";(self.webpackChunk_ukic_react=self.webpackChunk_ukic_react||[]).push([[4003],{"./src/stories/ic-section-container.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CenterAlignment:()=>CenterAlignment,FullHeight:()=>FullHeight,FullWidthAlignment:()=>FullWidthAlignment,LeftAligned:()=>LeftAligned,Playground:()=>Playground,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ic_section_container_stories});var react=__webpack_require__("./node_modules/react/index.js"),components=__webpack_require__("./src/components.ts");const ic_section_container_stories={title:"Section container",component:components.vU};var LeftAligned={render:function render(){return react.createElement(components.vU,{style:{border:"1px solid black"}},react.createElement("main",null,react.createElement("div",{style:{display:"flex",justifyContent:"space-between"}},react.createElement("button",null,"Start"),react.createElement("button",null,"End"))))},name:"Left Aligned"},CenterAlignment={render:function render(){return react.createElement(components.vU,{aligned:"center",style:{border:"1px solid black"}},react.createElement("main",null,react.createElement("div",{style:{display:"flex",justifyContent:"space-between"}},react.createElement("button",null,"Start"),react.createElement("button",null,"End"))))},name:"Center alignment"},FullWidthAlignment={render:function render(){return react.createElement(components.vU,{aligned:"full-width",style:{border:"1px solid black"}},react.createElement("main",null,react.createElement("div",{style:{display:"flex",justifyContent:"space-between"}},react.createElement("button",null,"Start"),react.createElement("button",null,"End"))))},name:"Full-width alignment"},FullHeight={render:function render(){return react.createElement(components.vU,{aligned:"full-width",fullHeight:"true",style:{border:"1px solid black"}},react.createElement("main",null,react.createElement("div",{style:{display:"flex",justifyContent:"space-between"}},react.createElement("button",null,"Start"),react.createElement("button",null,"End"))))},name:"Full-height"},Playground={render:function render(args){return react.createElement(components.vU,{aligned:args.aligned,fullHeight:args.fullHeight,style:{border:"1px solid black"}},react.createElement("main",null,react.createElement("div",{style:{display:"flex",justifyContent:"space-between"}},react.createElement("button",null,"Start"),react.createElement("button",null,"End"))))},name:"Playground",args:{aligned:null,fullHeight:!1},argTypes:{aligned:{options:[null,"left","center","full-width"],control:{type:"inline-radio"}}}};const __namedExportsOrder=["LeftAligned","CenterAlignment","FullWidthAlignment","FullHeight","Playground"];LeftAligned.parameters={...LeftAligned.parameters,docs:{...LeftAligned.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSectionContainer style={{\n    border: "1px solid black"\n  }}>\n      <main>\n        <div style={{\n        display: "flex",\n        justifyContent: "space-between"\n      }}>\n          <button>Start</button>\n          <button>End</button>\n        </div>\n      </main>\n    </IcSectionContainer>,\n  name: "Left Aligned"\n}',...LeftAligned.parameters?.docs?.source}}},CenterAlignment.parameters={...CenterAlignment.parameters,docs:{...CenterAlignment.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSectionContainer aligned="center" style={{\n    border: "1px solid black"\n  }}>\n      <main>\n        <div style={{\n        display: "flex",\n        justifyContent: "space-between"\n      }}>\n          <button>Start</button>\n          <button>End</button>\n        </div>\n      </main>\n    </IcSectionContainer>,\n  name: "Center alignment"\n}',...CenterAlignment.parameters?.docs?.source}}},FullWidthAlignment.parameters={...FullWidthAlignment.parameters,docs:{...FullWidthAlignment.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSectionContainer aligned="full-width" style={{\n    border: "1px solid black"\n  }}>\n      <main>\n        <div style={{\n        display: "flex",\n        justifyContent: "space-between"\n      }}>\n          <button>Start</button>\n          <button>End</button>\n        </div>\n      </main>\n    </IcSectionContainer>,\n  name: "Full-width alignment"\n}',...FullWidthAlignment.parameters?.docs?.source}}},FullHeight.parameters={...FullHeight.parameters,docs:{...FullHeight.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSectionContainer aligned="full-width" fullHeight="true" style={{\n    border: "1px solid black"\n  }}>\n      <main>\n        <div style={{\n        display: "flex",\n        justifyContent: "space-between"\n      }}>\n          <button>Start</button>\n          <button>End</button>\n        </div>\n      </main>\n    </IcSectionContainer>,\n  name: "Full-height"\n}',...FullHeight.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => <IcSectionContainer aligned={args.aligned} fullHeight={args.fullHeight} style={{\n    border: "1px solid black"\n  }}>\n      <main>\n        <div style={{\n        display: "flex",\n        justifyContent: "space-between"\n      }}>\n          <button>Start</button>\n          <button>End</button>\n        </div>\n      </main>\n    </IcSectionContainer>,\n  name: "Playground",\n  args: defaultArgs,\n  argTypes: {\n    aligned: {\n      options: [null, "left", "center", "full-width"],\n      control: {\n        type: "inline-radio"\n      }\n    }\n  }\n}',...Playground.parameters?.docs?.source}}}}}]);