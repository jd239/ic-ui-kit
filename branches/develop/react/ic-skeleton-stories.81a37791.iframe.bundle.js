"use strict";(self.webpackChunk_ukic_react=self.webpackChunk_ukic_react||[]).push([[4569],{"./src/stories/ic-skeleton.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Circle:()=>Circle,DeprecatedDark:()=>DeprecatedDark,Example:()=>Example,Light:()=>Light,Playground:()=>Playground,Rectangle:()=>Rectangle,Text:()=>Text,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ic_skeleton_stories});var react=__webpack_require__("./node_modules/react/index.js"),components=__webpack_require__("./src/components.ts");const ic_skeleton_stories={title:"Skeleton",component:components.UI};var Rectangle={render:function render(){return react.createElement(react.Fragment,null,react.createElement(components.Cu,{variant:"h4"},"Default"),react.createElement(components.UI,null),react.createElement(components.Cu,{variant:"h4"},"Inherited from child"),react.createElement(components.UI,null,react.createElement("div",{style:{height:"200px",width:"450px"}},"Test text")),react.createElement(components.Cu,{variant:"h4"},"Height and width set with styles"),react.createElement(components.UI,{style:{height:"200px",width:"200px"}}),react.createElement(components.Cu,{variant:"h4"},"Height set with styles"),react.createElement(components.UI,{style:{height:"75px"}}),react.createElement(components.Cu,{variant:"h4"},"Width set with styles"),react.createElement(components.UI,{style:{width:"450px"}}))},name:"Rectangle"},Circle={render:function render(){return react.createElement(components.UI,{variant:"circle"})},name:"Circle"},Text={render:function render(){return react.createElement(react.Fragment,null,react.createElement(components.Cu,{variant:"h1"},"h1"),react.createElement(components.Cu,{variant:"h1"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"h2"},"h2"),react.createElement(components.Cu,{variant:"h2"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"h3"},"h3"),react.createElement(components.Cu,{variant:"h3"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"h4"},"h4"),react.createElement(components.Cu,{variant:"h4"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"subtitle-large"},"subtitle-large"),react.createElement(components.Cu,{variant:"subtitle-large"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"subtitle-small"},"subtitle-small"),react.createElement(components.Cu,{variant:"subtitle-small"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"body"},"body"),react.createElement(components.Cu,{variant:"body"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"caption"},"caption"),react.createElement(components.Cu,{variant:"caption"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"label"},"label"),react.createElement(components.Cu,{variant:"subtitle-small"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"caption-uppercase"},"caption uppercase"),react.createElement(components.Cu,{variant:"caption-uppercase"},react.createElement(components.UI,{variant:"text"})),react.createElement(components.Cu,{variant:"label-uppercase"},"label uppercase"),react.createElement(components.Cu,{variant:"subtitle-small"},react.createElement(components.UI,{variant:"text"})))},name:"Text"},Example={render:function render(){return react.createElement(react.Fragment,null,react.createElement(components.UI,{variant:"circle",height:"20"}),react.createElement("div",{style:{height:"8px"}}),react.createElement(components.Cu,{variant:"caption"},react.createElement(components.UI,{variant:"text"})),react.createElement("div",{style:{height:"8px"}}),react.createElement(components.UI,null))},name:"Example"},Light={render:function render(){return react.createElement(react.Fragment,null,react.createElement(components.UI,{variant:"circle",height:"20",appearance:"light"}),react.createElement("div",{style:{height:"8px"}}),react.createElement(components.Cu,{variant:"caption"},react.createElement(components.UI,{variant:"text",appearance:"light"})),react.createElement("div",{style:{height:"8px"}}),react.createElement(components.UI,{appearance:"light"}))},name:"Light"},DeprecatedDark={render:function render(){return react.createElement(react.Fragment,null,react.createElement(components.UI,{variant:"circle",height:"20",dark:"true"}),react.createElement("div",{style:{height:"8px"}}),react.createElement(components.Cu,{variant:"caption"},react.createElement(components.UI,{variant:"text",dark:"true"})),react.createElement("div",{style:{height:"8px"}}),react.createElement(components.UI,{dark:"true"}))},name:"Deprecated - dark"},Playground={render:function render(args){return react.createElement("div",null,react.createElement(components.UI,{appearance:args.appearance,variant:args.variant,style:{height:"circle"==args.variant?"20px":"",width:"circle"==args.variant?"20px":""}}))},args:{appearance:"default",variant:"rectangle"},argTypes:{appearance:{options:["default","light"],control:{type:"inline-radio"}},variant:{options:["rectangle","circle","text"],control:{type:"radio"}}},name:"Playground"};const __namedExportsOrder=["Rectangle","Circle","Text","Example","Light","DeprecatedDark","Playground"];Rectangle.parameters={...Rectangle.parameters,docs:{...Rectangle.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcTypography variant="h4">Default</IcTypography>\n      <IcSkeleton />\n      <IcTypography variant="h4">Inherited from child</IcTypography>\n      <IcSkeleton>\n        <div style={{\n        height: "200px",\n        width: "450px"\n      }}>Test text</div>\n      </IcSkeleton>\n      <IcTypography variant="h4">Height and width set with styles</IcTypography>\n      <IcSkeleton style={{\n      height: "200px",\n      width: "200px"\n    }} />\n      <IcTypography variant="h4">Height set with styles</IcTypography>\n      <IcSkeleton style={{\n      height: "75px"\n    }} />\n      <IcTypography variant="h4">Width set with styles</IcTypography>\n      <IcSkeleton style={{\n      width: "450px"\n    }} />\n    </>,\n  name: "Rectangle"\n}',...Rectangle.parameters?.docs?.source}}},Circle.parameters={...Circle.parameters,docs:{...Circle.parameters?.docs,source:{originalSource:'{\n  render: () => <IcSkeleton variant="circle" />,\n  name: "Circle"\n}',...Circle.parameters?.docs?.source}}},Text.parameters={...Text.parameters,docs:{...Text.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcTypography variant="h1">h1</IcTypography>\n    <IcTypography variant="h1">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="h2">h2</IcTypography>\n    <IcTypography variant="h2">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="h3">h3</IcTypography>\n    <IcTypography variant="h3">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="h4">h4</IcTypography>\n    <IcTypography variant="h4">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="subtitle-large">subtitle-large</IcTypography>\n    <IcTypography variant="subtitle-large">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="subtitle-small">subtitle-small</IcTypography>\n    <IcTypography variant="subtitle-small">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="body">body</IcTypography>\n    <IcTypography variant="body">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="caption">caption</IcTypography>\n    <IcTypography variant="caption">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="label">label</IcTypography>\n    <IcTypography variant="subtitle-small">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="caption-uppercase">caption uppercase</IcTypography>\n    <IcTypography variant="caption-uppercase">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    <IcTypography variant="label-uppercase">label uppercase</IcTypography>\n    <IcTypography variant="subtitle-small">\n      <IcSkeleton variant="text" />\n    </IcTypography>\n    </>,\n  name: "Text"\n}',...Text.parameters?.docs?.source}}},Example.parameters={...Example.parameters,docs:{...Example.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcSkeleton variant="circle" height="20" />\n      <div style={{\n      height: "8px"\n    }}></div>\n      <IcTypography variant="caption">\n        <IcSkeleton variant="text" />\n      </IcTypography>\n      <div style={{\n      height: "8px"\n    }}></div>\n      <IcSkeleton />\n    </>,\n  name: "Example"\n}',...Example.parameters?.docs?.source}}},Light.parameters={...Light.parameters,docs:{...Light.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcSkeleton variant="circle" height="20" appearance="light" />\n      <div style={{\n      height: "8px"\n    }}></div>\n      <IcTypography variant="caption">\n        <IcSkeleton variant="text" appearance="light" />\n      </IcTypography>\n      <div style={{\n      height: "8px"\n    }}></div>\n      <IcSkeleton appearance="light" />\n    </>,\n  name: "Light"\n}',...Light.parameters?.docs?.source}}},DeprecatedDark.parameters={...DeprecatedDark.parameters,docs:{...DeprecatedDark.parameters?.docs,source:{originalSource:'{\n  render: () => <>\n      <IcSkeleton variant="circle" height="20" dark="true" />\n      <div style={{\n      height: "8px"\n    }}></div>\n      <IcTypography variant="caption">\n        <IcSkeleton variant="text" dark="true" />\n      </IcTypography>\n      <div style={{\n      height: "8px"\n    }}></div>\n      <IcSkeleton dark="true" />\n    </>,\n  name: "Deprecated - dark"\n}',...DeprecatedDark.parameters?.docs?.source}}},Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: args => <div>\n      <IcSkeleton appearance={args.appearance} variant={args.variant} style={{\n      height: args.variant == "circle" ? "20px" : "",\n      width: args.variant == "circle" ? "20px" : ""\n    }}></IcSkeleton>\n    </div>,\n  args: defaultArgs,\n  argTypes: {\n    appearance: {\n      options: ["default", "light"],\n      control: {\n        type: "inline-radio"\n      }\n    },\n    variant: {\n      options: ["rectangle", "circle", "text"],\n      control: {\n        type: "radio"\n      }\n    }\n  },\n  name: "Playground"\n}',...Playground.parameters?.docs?.source}}}}}]);