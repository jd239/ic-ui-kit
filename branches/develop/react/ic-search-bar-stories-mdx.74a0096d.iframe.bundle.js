/*! For license information please see ic-search-bar-stories-mdx.74a0096d.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_ukic_react=self.webpackChunk_ukic_react||[]).push([[4266],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Hl:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Hl,VY:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.VY,W8:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.W8,gG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.gG});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./src/stories/ic-search-bar.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledExample:()=>ControlledExample,ExternalFiltering:()=>ExternalFiltering,Uncontrolled:()=>Uncontrolled,__namedExportsOrder:()=>__namedExportsOrder,charactersUntilSuggestion:()=>charactersUntilSuggestion,controlled:()=>controlled,dark:()=>dark,default:()=>ic_search_bar_stories,defaultArgs:()=>defaultArgs,defaultStory:()=>defaultStory,deprecatedSmall:()=>deprecatedSmall,disabled:()=>disabled,emptyOptionListText:()=>emptyOptionListText,externalFiltering:()=>externalFiltering,fullWidth:()=>fullWidth,helperText:()=>helperText,hiddenLabel:()=>hiddenLabel,hintText:()=>hintText,inAForm:()=>inAForm,longOptionLabels:()=>longOptionLabels,playground:()=>playground,querySearchMode:()=>querySearchMode,sizeSmall:()=>sizeSmall,uncontrolled:()=>uncontrolled,withOptions:()=>withOptions,withOptionsNoFiltering:()=>withOptionsNoFiltering});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),components=__webpack_require__("./src/components.ts");const readme_namespaceObject='# ic-search-bar\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                    | Attribute                     | Description                                                                                                                                                                  | Type| Default                                                                                                    |\n| --------------------------- | ----------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------- || ---------------------------------------------------------------------------------------------------------- |\n| `autocapitalize`            | `autocapitalize`              | The automatic capitalisation of the text value as it is entered/edited by the user. Available options: "off", "none", "on", "sentences", "words", "characters".              | `string`| `"off"`                                                                                                    |\n| `autocomplete`              | `autocomplete`                | The state of autocompletion the browser can apply on the text value.                                                                                                         | `"name" \\| "on" \\| "off" \\| "honorific-prefix" \\| "given-name" \\| "additional-name" \\| "family-name" \\| "honorific-suffix" \\| "nickname" \\| "email" \\| "username" \\| "new-password" \\| "current-password" \\| "one-time-code" \\| "organization-title" \\| "organization" \\| "street-address" \\| "address-line1" \\| "address-line2" \\| "address-line3" \\| "address-level4" \\| "address-level3" \\| "address-level2" \\| "address-level1" \\| "country" \\| "country-name" \\| "postal-code" \\| "cc-name" \\| "cc-given-name" \\| "cc-additional-name" \\| "cc-family-name" \\| "cc-number" \\| "cc-exp" \\| "cc-exp-month" \\| "cc-exp-year" \\| "cc-csc" \\| "cc-type" \\| "transaction-currency" \\| "transaction-amount" \\| "language" \\| "bday" \\| "bday-day" \\| "bday-month" \\| "bday-year" \\| "sex" \\| "tel" \\| "tel-country-code" \\| "tel-national" \\| "tel-area-code" \\| "tel-local" \\| "tel-extension" \\| "impp" \\| "url" \\| "photo"` | `"off"`                                                                                                    |\n| `autocorrect`               | `autocorrect`                 | The state of autocorrection the browser can apply when the user is entering/editing the text value.                                                                          | `"off" \\| "on"`| `"off"`                                                                                                    |\n| `autofocus`                 | `autofocus`                   | If `true`, the form control will have input focus when the page loads.                                                                                                       | `boolean`| `false`                                                                                                    |\n| `charactersUntilSuggestion` | `characters-until-suggestion` | The number of characters until suggestions appear. The submit button will be disabled until the inputted value is equal to or greater than this number.                      | `number`| `2`                                                                                                        |\n| `debounce`                  | `debounce`                    | The amount of time, in milliseconds, to wait to trigger the `icChange` event after each keystroke.                                                                           | `number`| `0`                                                                                                        |\n| `disableFilter`             | `disable-filter`              | Specify whether to disable the built in filtering. For example, if options will already be filtered from external source. If `true`, all options provided will be displayed. | `boolean`| `false`                                                                                                    |\n| `disabled`                  | `disabled`                    | If `true`, the disabled state will be set.                                                                                                                                   | `boolean`| `false`                                                                                                    |\n| `emptyOptionListText`       | `empty-option-list-text`      | The text displayed when there are no options in the option list.                                                                                                             | `string`| `"No results found"`                                                                                       |\n| `focusOnLoad`               | `focus-on-load`               | If `true`, the search bar will be focused when component loaded.                                                                                                             | `boolean`| `false`                                                                                                    |\n| `fullWidth`                 | `full-width`                  | Specify whether the search bar fills the full width of the container. If `true`, this overrides the --input-width CSS variable.                                              | `boolean`| `false`                                                                                                    |\n| `helperText`                | `helper-text`                 | The helper text that will be displayed for additional field guidance.                                                                                                        | `string`| `""`                                                                                                       |\n| `hideLabel`                 | `hide-label`                  | If `true`, the label will be hidden and the required label value will be applied as an aria-label.                                                                           | `boolean`| `false`                                                                                                    |\n| `hintText`                  | `hint-text`                   | The hint text for the hidden assistive description element.                                                                                                                  | `string`| `"When autocomplete results are available use the up and down arrows to choose and press enter to select"` |\n| `label` _(required)_        | `label`                       | The label for the search bar.                                                                                                                                                | `string`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    | `undefined`                                                                                                |\n| `labelField`                | `label-field`                 | The custom name for the label field to correspond with the IcMenuOption type.                                                                                                | `string`| `"label"`                                                                                                  |\n| `loading`                   | `loading`                     | Trigger loading state when fetching options asynchronously                                                                                                                   | `boolean`| `false`                                                                                                    |\n| `loadingErrorLabel`         | `loading-error-label`         | Change the message displayed when external loading times out.                                                                                                                | `string`| `"Loading Error"`                                                                                          |\n| `loadingLabel`              | `loading-label`               | Change the message displayed whilst the options are being loaded externally.                                                                                                 | `string`| `"Loading..."`                                                                                             |\n| `name`                      | `name`                        | The name of the control, which is submitted with the form data.                                                                                                              | `string`| `this.inputId`                                                                                             |\n| `options`                   | --                            | The suggested search options.                                                                                                                                                | `IcMenuOption[]`| `[]`                                                                                                       |\n| `placeholder`               | `placeholder`                 | The placeholder value to display.                                                                                                                                            | `string`| `"Search"`                                                                                                 |\n| `readonly`                  | `readonly`                    | If `true`, the readonly state will be set.                                                                                                                                   | `boolean`| `false`                                                                                                    |\n| `required`                  | `required`                    | If `true`, the search bar will require a value.                                                                                                                              | `boolean`| `false`                                                                                                    |\n| `searchMode`                | `search-mode`                 | Specify the mode search bar uses to search. `navigation` allows for quick lookups of a set of values, `query` allows for more general searches.                              | `"navigation" \\| "query"`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | `"navigation"`                                                                                             |\n| `size`                      | `size`                        | The size of the search bar component.                                                                                                                                        | `"default" \\| "small"`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | `"default"`                                                                                                |\n| `small`                     | `small`                       | <span style="color:red">**[DEPRECATED]**</span> This prop should not be used anymore. Set prop `size` to "small" instead.<br/><br/>                                          | `boolean`| `false`                                                                                                    |\n| `spellcheck`                | `spellcheck`                  | If `true`, the value of the search will have its spelling and grammar checked.                                                                                               | `boolean`                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   | `false`                                                                                                    |\n| `timeout`                   | `timeout`                     | If using external filtering, set a timeout for when loading takes too long.                                                                                                  | `number`| `undefined`                                                                                                |\n| `value`                     | `value`                       | The value of the search input.                                                                                                                                               | `string`| `""`                                                                                                       |\n| `valueField`                | `value-field`                 | The custom name for the value field to correspond with the IcMenuOption type.                                                                                                | `string`| `"value"`                                                                                                  |\n\n\n## Events\n\n| Event              | Description                                                                                                                    | Type                                      |\n| ------------------ | ------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------- |\n| `icChange`         | Emitted when the value has changed.                                                                                            | `CustomEvent<IcValueEventDetail>`         |\n| `icClear`          | Emitted when value is cleared with clear button                                                                                | `CustomEvent<void>`                       |\n| `icInput`          | Emitted when a keyboard input occurred.                                                                                        | `CustomEvent<IcValueEventDetail>`         |\n| `icInputBlur`      | <span style="color:red">**[DEPRECATED]**</span> This event should not be used anymore. Use icSearchBarBlur instead.<br/><br/>  | `CustomEvent<IcSearchBarBlurEventDetail>` |\n| `icInputFocus`     | <span style="color:red">**[DEPRECATED]**</span> This event should not be used anymore. Use icSearchBarFocus instead.<br/><br/> | `CustomEvent<IcValueEventDetail>`         |\n| `icMenuChange`     | Emitted when the state of the menu changes (i.e. open or close)                                                                | `CustomEvent<IcMenuChangeEventDetail>`    |\n| `icOptionSelect`   | Emitted when option is highlighted within the menu                                                                             | `CustomEvent<IcOptionSelectEventDetail>`  |\n| `icRetryLoad`      | Emitted when the \'retry loading\' button is clicked                                                                             | `CustomEvent<IcValueEventDetail>`         |\n| `icSearchBarBlur`  | Emitted when blur is invoked from ic-search-bar                                                                                | `CustomEvent<IcSearchBarBlurEventDetail>` |\n| `icSearchBarFocus` | Emitted when focus is invoked from ic-search-bar                                                                               | `CustomEvent<void>`                       |\n| `icSubmitSearch`   | Emitted when the search value has been submitted                                                                               | `CustomEvent<IcValueEventDetail>`         |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the native `input`.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## CSS Custom Properties\n\n| Name                | Description                |\n| ------------------- | -------------------------- |\n| `--ic-z-index-menu` | z-index of search bar menu |\n\n\n## Dependencies\n\n### Depends on\n\n- [ic-text-field](../ic-text-field)\n- [ic-button](../ic-button)\n- [ic-menu](../ic-menu)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-search-bar --\x3e ic-text-field\n  ic-search-bar --\x3e ic-button\n  ic-search-bar --\x3e ic-menu\n  ic-text-field --\x3e ic-input-container\n  ic-text-field --\x3e ic-input-label\n  ic-text-field --\x3e ic-input-component-container\n  ic-text-field --\x3e ic-input-validation\n  ic-text-field --\x3e ic-typography\n  ic-input-label --\x3e ic-typography\n  ic-input-validation --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-menu --\x3e ic-loading-indicator\n  ic-menu --\x3e ic-typography\n  ic-menu --\x3e ic-button\n  style ic-search-bar fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ExternalFiltering=()=>{const mockData=[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}],[event,setEvent]=(0,react.useState)(null),[results,setResults]=(0,react.useState)([]),[loading,setLoading]=(0,react.useState)(!1),[optionSelected,setOptionSelected]=(0,react.useState)(!1);(0,react.useEffect)((()=>{const searchTerm=event?.detail.value;if(searchTerm!==optionSelected)if(searchTerm?.length>1){optionSelected||setLoading(!0),setOptionSelected(!1);(query=>{const filteredResults=mockData.filter((m=>m.label.toLowerCase().includes(query.toLowerCase())));return new Promise((resolve=>setTimeout((()=>resolve(filteredResults)),"icChange"===event.type?2e3:500)))})(searchTerm).then((results=>setResults(results)))}else setResults([]);setOptionSelected(!1)}),[event,optionSelected]);const handleChange=event=>{setEvent(event)};return(0,jsx_runtime.jsx)(components.GJ,{loading,timeout:1e3,debounce:300,placeholder:"Type to search",label:"Search for coffee",onIcChange:handleChange,onIcRetryLoad:handleChange,onIcOptionSelect:()=>{setOptionSelected(!0)},disableFilter:!0,options:results,loadingLabel:"Loading time",loadingErrorLabel:"Oops error"})},ControlledExample=()=>{const[value,setValue]=(0,react.useState)("cap");return(0,jsx_runtime.jsx)(components.GJ,{placeholder:"Controlled",label:"Controlled",options:[{label:"Espresso",value:"esp"},{label:"Double Espresso",value:"dbl"},{label:"Flat White",value:"fla"},{label:"Cappuccino",value:"cap"},{label:"Americano",value:"ame"},{label:"Mocha",value:"moc"}],value,onIcChange:event=>{console.log(event.detail.value),setValue(event.detail.value)}})},Uncontrolled=()=>{const searchEl=(0,react.useRef)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(components.GJ,{ref:searchEl,placeholder:"Uncontrolled",label:"Uncontrolled",options:[{label:"Espresso",value:"esp"},{label:"Double Espresso",value:"dbl"},{label:"Flat White",value:"fla"},{label:"Cappuccino",value:"cap"},{label:"Americano",value:"ame"},{label:"Mocha",value:"moc"}],onIcChange:()=>{console.log(searchEl.current.value)}})})},defaultArgs={autocapitalize:"off",autocorrect:"off",autofocus:!1,disabled:!1,fullWidth:!1,focusOnLoad:!0,helperText:"",hideLabel:!1,label:"What is your favourite coffee?",placeholder:"Search",readonly:!1,required:!1,size:"default",spellcheck:!1};function _createMdxContent(props){const _components=Object.assign({h3:"h3",p:"p"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Search bar",component:components.GJ}),"\n",(0,jsx_runtime.jsx)(dist.VY,{markdown:readme_namespaceObject}),"\n","\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",onIcSubmitSearch:()=>console.log("submit search")})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-options",children:"With options"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsxs)(dist.gG,{name:"With options",children:[(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)(_components.p,{children:"Suggested search options: Espresso, Double Espresso, Flat White,\nCappuccino, Americano, Mocha"})})]})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-options-no-filtering",children:"With options (no filtering)"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsxs)(dist.gG,{name:"With options (no filtering)",children:[(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",disableFilter:!0,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:"All options will be displayed as you type"})]})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"in-a-form",children:"In a form"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"In a form",children:(0,jsx_runtime.jsx)("form",{onSubmit:()=>console.log("form submit"),children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?"})})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"helper-text",children:"Helper text"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Helper text",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",helperText:"Some helper text"})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"size-small",children:"Size small"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Size small",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",size:"small"})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"deprecated---small",children:"Deprecated - small"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Deprecated - small",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",small:!0})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"hidden-label",children:"Hidden label"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Hidden label",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",hideLabel:!0})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Disabled",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",disabled:!0})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"full-width",children:"Full Width"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsxs)(dist.gG,{name:"Full Width",children:[(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",fullWidth:!0,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)(_components.p,{children:"Suggested search options: Espresso, Double Espresso, Flat White,\nCappuccino, Americano, Mocha"})})]})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"dark",children:"Dark"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Dark",parameters:{backgrounds:{default:"dark"}},children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",dark:!0})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"external-filtering",children:"External filtering"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsxs)(dist.gG,{name:"External filtering",children:[(0,jsx_runtime.jsx)(ExternalFiltering,{}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)(_components.p,{children:"Suggested search options: Espresso, Double Espresso, Flat White,\nCappuccino, Americano, Mocha"})}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)(_components.p,{children:"The IcChange event will trigger 300ms after you finish typing. 1 second\nlater, the options in the searchbar menu will be updated."})})]})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"query-search-mode",children:"Query search mode"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Query search mode",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",searchMode:"query",onIcSubmitSearch:()=>console.log("submit search"),options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"empty-option-list-text",children:"Empty option list text"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Empty option list text",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",emptyOptionListText:"There's nothing here",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"characters-until-suggestion",children:"Characters until suggestion"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Characters until suggestion",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",charactersUntilSuggestion:5,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"hint-text",children:"Hint text"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Hint text",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",hintText:"You can use up and down arrows to navigate the options when they are available, and press enter to select an option.",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"long-option-labels",children:"Long option labels"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Long option labels",children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",options:[{label:"Espresso because it tastes like coffee",value:"espresso"},{label:"Double Espresso because it tastes like double the amount of coffee",value:"doubleespresso"},{label:"Reallylongonewordanswerthatcouldbethenameofacoffee",value:"flatwhite"}]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"controlled",children:"Controlled"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Controlled",children:(0,jsx_runtime.jsx)(ControlledExample,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"uncontrolled",children:"Uncontrolled"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Uncontrolled",children:(0,jsx_runtime.jsx)(Uncontrolled,{})})}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{args:defaultArgs,argTypes:{autocapitalize:{options:["off","none","on","sentences","words","characters"],control:{type:"select"}},autocorrect:{options:["on","off"],control:{type:"inline-radio"}},size:{options:["default","small"],control:{type:"inline-radio"}}},name:"Playground",children:args=>(0,jsx_runtime.jsx)(components.GJ,{autocapitalize:args.autocapitalize,autocorrect:args.autocorrect,autofocus:args.autofocus,label:args.label,required:args.required,readonly:args.readonly,spellcheck:args.spellcheck,disabled:args.disabled,fullWidth:args.fullWidth,focusOnLoad:args.focusOnLoad,helperText:args.helperText,hideLabel:args.hideLabel,placeholder:args.placeholder,size:args.size,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]})})})]})}const defaultStory=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",onIcSubmitSearch:()=>console.log("submit search")});defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" onIcSubmitSearch={() => console.log("submit search")} />'}};const withOptions=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)("p",{children:"Suggested search options: Espresso, Double Espresso, Flat White,\nCappuccino, Americano, Mocha"})})]});withOptions.storyName="With options",withOptions.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" options={[{\n  label: "Espresso",\n  value: "espresso"\n}, {\n  label: "Double Espresso",\n  value: "doubleespresso"\n}, {\n  label: "Flat White",\n  value: "flatwhite"\n}, {\n  label: "Cappuccino",\n  value: "cappuccino"\n}, {\n  label: "Americano",\n  value: "americano"\n}, {\n  label: "Mocha",\n  value: "mocha"\n}]} />\n<br />\n<IcTypography><p>{"Suggested search options: Espresso, Double Espresso, Flat White,\\nCappuccino, Americano, Mocha"}</p></IcTypography>'}};const withOptionsNoFiltering=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",disableFilter:!0,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:"All options will be displayed as you type"})]});withOptionsNoFiltering.storyName="With options (no filtering)",withOptionsNoFiltering.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" disableFilter options={[{\n  label: "Espresso",\n  value: "espresso"\n}, {\n  label: "Double Espresso",\n  value: "doubleespresso"\n}, {\n  label: "Flat White",\n  value: "flatwhite"\n}, {\n  label: "Cappuccino",\n  value: "cappuccino"\n}, {\n  label: "Americano",\n  value: "americano"\n}, {\n  label: "Mocha",\n  value: "mocha"\n}]} />\n<br />\n<IcTypography>{"All options will be displayed as you type"}</IcTypography>'}};const inAForm=()=>(0,jsx_runtime.jsx)("form",{onSubmit:()=>console.log("form submit"),children:(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?"})});inAForm.storyName="In a form",inAForm.parameters={storySource:{source:'<form onSubmit={() => console.log("form submit")}><IcSearchBar label="What is your favourite coffee?" /></form>'}};const helperText=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",helperText:"Some helper text"});helperText.storyName="Helper text",helperText.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" helperText="Some helper text" />'}};const sizeSmall=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",size:"small"});sizeSmall.storyName="Size small",sizeSmall.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" size="small" />'}};const deprecatedSmall=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",small:!0});deprecatedSmall.storyName="Deprecated - small",deprecatedSmall.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" small />'}};const hiddenLabel=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",hideLabel:!0});hiddenLabel.storyName="Hidden label",hiddenLabel.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" hideLabel />'}};const disabled=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",disabled:!0});disabled.storyName="Disabled",disabled.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" disabled />'}};const fullWidth=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",fullWidth:!0,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)("p",{children:"Suggested search options: Espresso, Double Espresso, Flat White,\nCappuccino, Americano, Mocha"})})]});fullWidth.storyName="Full Width",fullWidth.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" fullWidth options={[{\n  label: "Espresso",\n  value: "espresso"\n}, {\n  label: "Double Espresso",\n  value: "doubleespresso"\n}, {\n  label: "Flat White",\n  value: "flatwhite"\n}, {\n  label: "Cappuccino",\n  value: "cappuccino"\n}, {\n  label: "Americano",\n  value: "americano"\n}, {\n  label: "Mocha",\n  value: "mocha"\n}]} />\n<br />\n<IcTypography><p>{"Suggested search options: Espresso, Double Espresso, Flat White,\\nCappuccino, Americano, Mocha"}</p></IcTypography>'}};const dark=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",dark:!0});dark.storyName="Dark",dark.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" dark />'},backgrounds:{default:"dark"}};const externalFiltering=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(ExternalFiltering,{}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)("p",{children:"Suggested search options: Espresso, Double Espresso, Flat White,\nCappuccino, Americano, Mocha"})}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)(components.Cu,{children:(0,jsx_runtime.jsx)("p",{children:"The IcChange event will trigger 300ms after you finish typing. 1 second\nlater, the options in the searchbar menu will be updated."})})]});externalFiltering.storyName="External filtering",externalFiltering.parameters={storySource:{source:'<ExternalFiltering />\n<br />\n<IcTypography><p>{"Suggested search options: Espresso, Double Espresso, Flat White,\\nCappuccino, Americano, Mocha"}</p></IcTypography>\n<br />\n<IcTypography><p>{"The IcChange event will trigger 300ms after you finish typing. 1 second\\nlater, the options in the searchbar menu will be updated."}</p></IcTypography>'}};const querySearchMode=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",searchMode:"query",onIcSubmitSearch:()=>console.log("submit search"),options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]});querySearchMode.storyName="Query search mode",querySearchMode.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" searchMode="query" onIcSubmitSearch={() => console.log("submit search")} options={[{\n  label: "Espresso",\n  value: "espresso"\n}, {\n  label: "Double Espresso",\n  value: "doubleespresso"\n}, {\n  label: "Flat White",\n  value: "flatwhite"\n}, {\n  label: "Cappuccino",\n  value: "cappuccino"\n}, {\n  label: "Americano",\n  value: "americano"\n}, {\n  label: "Mocha",\n  value: "mocha"\n}]} />'}};const emptyOptionListText=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",emptyOptionListText:"There's nothing here",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]});emptyOptionListText.storyName="Empty option list text",emptyOptionListText.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" emptyOptionListText="There\'s nothing here" options={[{\n  label: "Espresso",\n  value: "espresso"\n}, {\n  label: "Double Espresso",\n  value: "doubleespresso"\n}, {\n  label: "Flat White",\n  value: "flatwhite"\n}, {\n  label: "Cappuccino",\n  value: "cappuccino"\n}, {\n  label: "Americano",\n  value: "americano"\n}, {\n  label: "Mocha",\n  value: "mocha"\n}]} />'}};const charactersUntilSuggestion=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",charactersUntilSuggestion:5,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]});charactersUntilSuggestion.storyName="Characters until suggestion",charactersUntilSuggestion.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" charactersUntilSuggestion={5} options={[{\n  label: "Espresso",\n  value: "espresso"\n}, {\n  label: "Double Espresso",\n  value: "doubleespresso"\n}, {\n  label: "Flat White",\n  value: "flatwhite"\n}, {\n  label: "Cappuccino",\n  value: "cappuccino"\n}, {\n  label: "Americano",\n  value: "americano"\n}, {\n  label: "Mocha",\n  value: "mocha"\n}]} />'}};const hintText=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",hintText:"You can use up and down arrows to navigate the options when they are available, and press enter to select an option.",options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]});hintText.storyName="Hint text",hintText.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" hintText="You can use up and down arrows to navigate the options when they are available, and press enter to select an option." options={[{\n  label: "Espresso",\n  value: "espresso"\n}, {\n  label: "Double Espresso",\n  value: "doubleespresso"\n}, {\n  label: "Flat White",\n  value: "flatwhite"\n}, {\n  label: "Cappuccino",\n  value: "cappuccino"\n}, {\n  label: "Americano",\n  value: "americano"\n}, {\n  label: "Mocha",\n  value: "mocha"\n}]} />'}};const longOptionLabels=()=>(0,jsx_runtime.jsx)(components.GJ,{label:"What is your favourite coffee?",options:[{label:"Espresso because it tastes like coffee",value:"espresso"},{label:"Double Espresso because it tastes like double the amount of coffee",value:"doubleespresso"},{label:"Reallylongonewordanswerthatcouldbethenameofacoffee",value:"flatwhite"}]});longOptionLabels.storyName="Long option labels",longOptionLabels.parameters={storySource:{source:'<IcSearchBar label="What is your favourite coffee?" options={[{\n  label: "Espresso because it tastes like coffee",\n  value: "espresso"\n}, {\n  label: "Double Espresso because it tastes like double the amount of coffee",\n  value: "doubleespresso"\n}, {\n  label: "Reallylongonewordanswerthatcouldbethenameofacoffee",\n  value: "flatwhite"\n}]} />'}};const controlled=()=>(0,jsx_runtime.jsx)(ControlledExample,{});controlled.storyName="Controlled",controlled.parameters={storySource:{source:"<ControlledExample />"}};const uncontrolled=()=>(0,jsx_runtime.jsx)(Uncontrolled,{});uncontrolled.storyName="Uncontrolled",uncontrolled.parameters={storySource:{source:"<Uncontrolled />"}};const playground=args=>(0,jsx_runtime.jsx)(components.GJ,{autocapitalize:args.autocapitalize,autocorrect:args.autocorrect,autofocus:args.autofocus,label:args.label,required:args.required,readonly:args.readonly,spellcheck:args.spellcheck,disabled:args.disabled,fullWidth:args.fullWidth,focusOnLoad:args.focusOnLoad,helperText:args.helperText,hideLabel:args.hideLabel,placeholder:args.placeholder,size:args.size,options:[{label:"Espresso",value:"espresso"},{label:"Double Espresso",value:"doubleespresso"},{label:"Flat White",value:"flatwhite"},{label:"Cappuccino",value:"cappuccino"},{label:"Americano",value:"americano"},{label:"Mocha",value:"mocha"}]});playground.storyName="Playground",playground.argTypes={autocapitalize:{options:["off","none","on","sentences","words","characters"],control:{type:"select"}},autocorrect:{options:["on","off"],control:{type:"inline-radio"}},size:{options:["default","small"],control:{type:"inline-radio"}}},playground.args=defaultArgs,playground.parameters={storySource:{source:'args => <IcSearchBar autocapitalize={args.autocapitalize} autocorrect={args.autocorrect} autofocus={args.autofocus} label={args.label} required={args.required} readonly={args.readonly} spellcheck={args.spellcheck} disabled={args.disabled} fullWidth={args.fullWidth} focusOnLoad={args.focusOnLoad} helperText={args.helperText} hideLabel={args.hideLabel} placeholder={args.placeholder} size={args.size} options={[{\n  label: "Espresso",\n  value: "espresso"\n}, {\n  label: "Double Espresso",\n  value: "doubleespresso"\n}, {\n  label: "Flat White",\n  value: "flatwhite"\n}, {\n  label: "Cappuccino",\n  value: "cappuccino"\n}, {\n  label: "Americano",\n  value: "americano"\n}, {\n  label: "Mocha",\n  value: "mocha"\n}]} />'}};const componentMeta={title:"Search bar",component:components.GJ,tags:["stories-mdx"],includeStories:["defaultStory","withOptions","withOptionsNoFiltering","inAForm","helperText","sizeSmall","deprecatedSmall","hiddenLabel","disabled","fullWidth","dark","externalFiltering","querySearchMode","emptyOptionListText","charactersUntilSuggestion","hintText","longOptionLabels","controlled","uncontrolled","playground"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_search_bar_stories=componentMeta,__namedExportsOrder=["ExternalFiltering","ControlledExample","Uncontrolled","defaultArgs","defaultStory","withOptions","withOptionsNoFiltering","inAForm","helperText","sizeSmall","deprecatedSmall","hiddenLabel","disabled","fullWidth","dark","externalFiltering","querySearchMode","emptyOptionListText","charactersUntilSuggestion","hintText","longOptionLabels","controlled","uncontrolled","playground"]},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);