"use strict";(self.webpackChunk_ukic_react=self.webpackChunk_ukic_react||[]).push([[9649],{"./src/stories/ic-checkbox.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckOptionsDynamic:()=>CheckOptionsDynamic,Controlled:()=>Controlled,Form:()=>Form,Indeterminate:()=>Indeterminate,IndeterminateWithChildren:()=>IndeterminateWithChildren,TextField:()=>TextField,Uncontrolled:()=>Uncontrolled,__namedExportsOrder:()=>__namedExportsOrder,conditionalDynamic:()=>conditionalDynamic,conditionalStatic:()=>conditionalStatic,controlled:()=>controlled,default:()=>ic_checkbox_stories,defaultArgs:()=>defaultArgs,defaultStory:()=>defaultStory,disabled:()=>disabled,dynamicLoading:()=>dynamicLoading,form:()=>ic_checkbox_stories_form,helperText:()=>helperText,hiddenLabel:()=>hiddenLabel,indeterminate:()=>indeterminate,indeterminateWithChildren:()=>indeterminateWithChildren,playground:()=>playground,required:()=>required,sizes:()=>sizes,textFieldValueChange:()=>textFieldValueChange,uncontrolled:()=>uncontrolled,validation:()=>validation});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),components=__webpack_require__("./src/components.ts");const readme_namespaceObject='# ic-checkbox\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                       | Attribute                        | Description                                                                                                                                                                                   | Type                              | Default                                        |\n| ------------------------------ | -------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------- | ---------------------------------------------- |\n| `additionalFieldDisplay`       | `additional-field-display`       | The style of additionalField that will be displayed if used.                                                                                                                                  | `"dynamic" \\| "static"`           | `"static"`                                     |\n| `checked`                      | `checked`                        | If `true`, the checkbox will be set to the checked state.                                                                                                                                     | `boolean`                         | `false`                                        |\n| `disabled`                     | `disabled`                       | If `true`, the checkbox will be set to the disabled state.                                                                                                                                    | `boolean`                         | `false`                                        |\n| `dynamicText`                  | `dynamic-text`                   | The text to be displayed when dynamic.                                                                                                                                                        | `string`                          | `"This selection requires additional answers"` |\n| `form`                         | `form`                           | The <form> element to associate the checkbox with.                                                                                                                                            | `string`                          | `undefined`                                    |\n| `formaction`                   | `formaction`                     | The URL that processes the information submitted by the checkbox. It overrides the action attribute of the checkbox\'s form owner. Does nothing if there is no form owner.                     | `string`                          | `undefined`                                    |\n| `formenctype`                  | `formenctype`                    | The way the submitted form data is encoded.                                                                                                                                                   | `string`                          | `undefined`                                    |\n| `formmethod`                   | `formmethod`                     | The HTTP method used to submit the form.                                                                                                                                                      | `string`                          | `undefined`                                    |\n| `formnovalidate`               | `formnovalidate`                 | If `true`, the form will not be validated when submitted.                                                                                                                                     | `boolean`                         | `undefined`                                    |\n| `formtarget`                   | `formtarget`                     | The place to display the response from submitting the form. It overrides the target attribute of the checkbox\'s form owner.                                                                   | `string`                          | `undefined`                                    |\n| `groupLabel`                   | `group-label`                    | The group label for the checkbox.                                                                                                                                                             | `string`                          | `undefined`                                    |\n| `hideLabel`                    | `hide-label`                     | If `true`, the label will be hidden and the required label value will be applied as an aria-label.                                                                                            | `boolean`                         | `false`                                        |\n| `indeterminate`                | `indeterminate`                  | If `true`, the indeterminate state will be displayed when checked.                                                                                                                            | `boolean`                         | `false`                                        |\n| `label` _(required)_           | `label`                          | The label for the checkbox.                                                                                                                                                                   | `string`                          | `undefined`                                    |\n| `name`                         | `name`                           | The name for the checkbox. If not set when used in a checkbox group, the name will be based on the group name.                                                                                | `string`                          | `undefined`                                    |\n| `nativeIndeterminateBehaviour` | `native-indeterminate-behaviour` | If `true`, the checkbox will behave like a native checkbox where the `indeterminate` prop sets the indeterminate visual styling, independent of the `checked` state.                          | `boolean`                         | `false`                                        |\n| `size`                         | `size`                           | The size of the checkbox to be displayed. This does not affect the font size of the label. If a checkbox is contained in a checkbox group, this will override the size set on checkbox group. | `"default" \\| "large" \\| "small"` | `undefined`                                    |\n| `small`                        | `small`                          | <span style="color:red">**[DEPRECATED]**</span> This prop should not be used anymore. Set prop `size` to "small" instead.<br/><br/>                                                           | `boolean`                         | `false`                                        |\n| `value` _(required)_           | `value`                          | The value for the checkbox.                                                                                                                                                                   | `string`                          | `undefined`                                    |\n\n\n## Events\n\n| Event             | Description                                                                                                           | Type                |\n| ----------------- | --------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| `checkboxChecked` | <span style="color:red">**[DEPRECATED]**</span> This event should not be used anymore. Use icCheck instead.<br/><br/> | `CustomEvent<void>` |\n| `icCheck`         | Emitted when a checkbox has been checked.                                                                             | `CustomEvent<void>` |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the checkbox.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot                 | Description                                   |\n| -------------------- | --------------------------------------------- |\n| `"additional-field"` | Content to be displayed alongside a checkbox. |\n\n\n## Dependencies\n\n### Depends on\n\n- [ic-typography](../ic-typography)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-checkbox --\x3e ic-typography\n  style ic-checkbox fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n',ic_checkbox_group_readme_namespaceObject='# ic-checkbox-group\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property             | Attribute           | Description                                                                                                                         | Type                                      | Default     |\n| -------------------- | ------------------- | ----------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------- | ----------- |\n| `disabled`           | `disabled`          | If `true`, the checkbox group will be set to the disabled state.                                                                    | `boolean`                                 | `false`     |\n| `helperText`         | `helper-text`       | The helper text that will be displayed for additional field guidance.                                                               | `string`                                  | `""`        |\n| `hideLabel`          | `hide-label`        | If `true`, the label will be hidden and the required label value will be applied as an aria-label.                                  | `boolean`                                 | `false`     |\n| `label` _(required)_ | `label`             | The label for the checkbox group to be displayed.                                                                                   | `string`                                  | `undefined` |\n| `name` _(required)_  | `name`              | The name for the checkbox group to differentiate from other groups.                                                                 | `string`                                  | `undefined` |\n| `required`           | `required`          | If `true`, the checkbox group will require a value.                                                                                 | `boolean`                                 | `false`     |\n| `size`               | `size`              | The size of the checkboxes to be displayed. This does not affect the font size of the label.                                        | `"default" \\| "large" \\| "small"`         | `"default"` |\n| `small`              | `small`             | <span style="color:red">**[DEPRECATED]**</span> This prop should not be used anymore. Set prop `size` to "small" instead.<br/><br/> | `boolean`                                 | `false`     |\n| `validationStatus`   | `validation-status` | The validation status - e.g. \'error\' \\| \'warning\' \\| \'success\'.                                                                     | `"" \\| "error" \\| "success" \\| "warning"` | `""`        |\n| `validationText`     | `validation-text`   | The validation text - e.g. \'error\' \\| \'warning\' \\| \'success\'.                                                                       | `string`                                  | `""`        |\n\n\n## Events\n\n| Event      | Description                         | Type                               |\n| ---------- | ----------------------------------- | ---------------------------------- |\n| `icChange` | Emitted when a checkbox is checked. | `CustomEvent<IcChangeEventDetail>` |\n\n\n## Dependencies\n\n### Depends on\n\n- [ic-input-label](../ic-input-label)\n- [ic-input-validation](../ic-input-validation)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-checkbox-group --\x3e ic-input-label\n  ic-checkbox-group --\x3e ic-input-validation\n  ic-input-label --\x3e ic-typography\n  ic-input-validation --\x3e ic-typography\n  style ic-checkbox-group fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var index_esm=__webpack_require__("./node_modules/react-hook-form/dist/index.esm.mjs"),external_STORYBOOK_MODULE_CLIENT_API_=__webpack_require__("@storybook/client-api"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Form=()=>{const _components=Object.assign({form:"form",input:"input"},(0,lib.RP)()),{register,handleSubmit,unregister}=(0,index_esm.mN)(),onCheck=e=>{e.target.checked?register(e.target.name,{value:e.target.value}):unregister(e.target.name)};return(0,jsx_runtime.jsxs)(_components.form,{onSubmit:handleSubmit((data=>console.log(data))),children:[(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{name:"checkbox1",value:"valueName1",label:"Unselected / Default",onIcCheck:onCheck}),(0,jsx_runtime.jsx)(components.sz,{name:"checkbox2",value:"valueName2",label:"Selected / Default",onIcCheck:onCheck}),(0,jsx_runtime.jsx)(components.sz,{name:"checkbox3",value:"valueName3",label:"Unselected / Disabled",Disabled:!0})]}),(0,jsx_runtime.jsx)(_components.input,{type:"submit",value:"Submit"})]})},Indeterminate=()=>{const _components=Object.assign({div:"div",br:"br",span:"span"},(0,lib.RP)()),[indeterminate,setIndeterminate]=(0,react.useState)(!0),[checked,setChecked]=(0,react.useState)(!0),[nativeIndeterminate,setNativeIndeterminate]=(0,react.useState)(!0),[nativeChecked,setNativeChecked]=(0,react.useState)(!0);return(0,jsx_runtime.jsxs)(_components.div,{style:{display:"flex",gap:"16px","flex-wrap":"wrap"},children:[(0,jsx_runtime.jsxs)(_components.div,{style:{border:"1px solid gray",padding:"8px"},children:[(0,jsx_runtime.jsx)(components.rG,{label:"'native-indeterminate-behavior'=false",name:"indeterminate",children:(0,jsx_runtime.jsx)(components.sz,{value:"indeterminate",label:"Indeterminate checkbox",checked,indeterminate,onClick:ev=>{setChecked(ev.target.checked)}})}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(components.nP,{onClick:()=>{setIndeterminate(!indeterminate)},children:"Toggle indeterminate"}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(_components.span,{children:`Indeterminate: ${indeterminate}`}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(_components.span,{children:`Checked: ${checked}`})]}),(0,jsx_runtime.jsxs)(_components.div,{style:{border:"1px solid gray",padding:"8px"},children:[(0,jsx_runtime.jsx)(components.rG,{label:"'native-indeterminate-behavior'=true",name:"native-indeterminate",children:(0,jsx_runtime.jsx)(components.sz,{value:"native-indeterminate",label:"Indeterminate checkbox",checked:nativeChecked,indeterminate:nativeIndeterminate,onClick:ev=>{setNativeChecked(ev.target.checked)},nativeIndeterminateBehaviour:!0})}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(components.nP,{onClick:()=>{setNativeIndeterminate(!nativeIndeterminate)},children:"Toggle indeterminate"}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(_components.span,{children:`Indeterminate: ${nativeIndeterminate}`}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(_components.span,{children:`Checked: ${nativeChecked}`})]})]})},IndeterminateWithChildren=()=>{const[drinksChecked,setDrinksChecked]=(0,react.useState)({tea:!1,coffee:!0,juice:!1}),[parentChecked,setParentChecked]=(0,react.useState)(!1),[parentIndeterminate,setParentIndeterminate]=(0,react.useState)(!0);return(0,jsx_runtime.jsx)(components.rG,{label:"Liked things",name:"1",children:(0,jsx_runtime.jsx)(components.sz,{id:"drinks-checkbox",value:"drinks",label:"Drinks",checked:parentChecked,indeterminate:parentIndeterminate,nativeIndeterminateBehaviour:!0,onIcCheck:ev=>{"drinks-checkbox"===ev.target.id&&(setParentChecked(ev.target.checked),setParentIndeterminate(!1),setDrinksChecked({tea:ev.target.checked,coffee:ev.target.checked,juice:ev.target.checked}))},children:(0,jsx_runtime.jsxs)(components.rG,{name:"2",label:"Drinks",hideLabel:!0,slot:"additional-field",onIcChange:e=>{0===e.detail.checkedOptions.length?(setParentChecked(!1),setParentIndeterminate(!1)):3===e.detail.checkedOptions.length?(setParentChecked(!0),setParentIndeterminate(!1)):setParentIndeterminate(!0)},children:[(0,jsx_runtime.jsx)(components.sz,{value:"tea",label:"Tea",checked:drinksChecked.tea,onIcCheck:ev=>{setDrinksChecked({...drinksChecked,tea:ev.target.checked})}}),(0,jsx_runtime.jsx)(components.sz,{value:"coffee",label:"Coffee",checked:drinksChecked.coffee,onIcCheck:ev=>{setDrinksChecked({...drinksChecked,coffee:ev.target.checked})}}),(0,jsx_runtime.jsx)(components.sz,{value:"juice",label:"Juice",checked:drinksChecked.juice,onIcCheck:ev=>{setDrinksChecked({...drinksChecked,juice:ev.target.checked})}})]})})})},TextField=()=>{const _components=Object.assign({div:"div",br:"br"},(0,lib.RP)()),[textBoxValue,setTextBoxValue]=(0,react.useState)("");return(0,jsx_runtime.jsxs)(_components.div,{children:[(0,jsx_runtime.jsx)(components.rG,{label:"This is a label",name:"1",children:(0,jsx_runtime.jsx)(components.sz,{additionalFieldDisplay:"static",value:"valueName1",label:"option1",children:(0,jsx_runtime.jsx)(components.k2,{slot:"additional-field",placeholder:"Placeholder",label:"What's your favourite type of coffee?",onIcChange:e=>{setTextBoxValue(e.detail.value)}})})}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsxs)(_components.div,{children:["textbox value :",textBoxValue]})]})},Controlled=()=>{const[checked,setChecked]=(0,react.useState)(!0);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.sz,{checked,label:"Label",value:"valueName1"}),(0,jsx_runtime.jsx)(components.nP,{variant:"primary",onClick:()=>{setChecked(!1)},children:"Unchecked"}),(0,jsx_runtime.jsx)(components.nP,{variant:"primary",onClick:()=>{setChecked(!0)},children:"Checked"})]})},Uncontrolled=()=>{const checkboxEl=(0,react.useRef)();return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)(components.sz,{ref:checkboxEl,label:"Label",value:"valueName1",onIcCheck:()=>{console.log(checkboxEl.current.checked)}})})},CheckOptionsDynamic=()=>{const _components=Object.assign({br:"br"},(0,lib.RP)()),[checkOptions,setCheckOptions]=(0,react.useState)([]);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(components.rG,{label:"What is your favourite coffee?",name:"checkbox-group-1",children:checkOptions.map(((option,index)=>(0,jsx_runtime.jsx)(components.sz,{value:option.value,label:option.label},index+option.value)))}),(0,jsx_runtime.jsx)(_components.br,{}),(0,jsx_runtime.jsx)(components.nP,{onClick:()=>{setCheckOptions([{label:"Item 1",value:"Item 1"},{label:"Item 2",value:"Item 2"},{label:"Item 3",value:"Item 3"},{label:"Item 4",value:"Item 4"}])},children:"Update"})]})},defaultArgs={additionalFieldDisplay:"dynamic",additionalFieldSlot:"additional-field",checked:!1,disabled:!1,dynamicText:"Dynamic text",groupLabel:"Checkbox group label",helperText:"Helper text",hideLabel:!1,hideGroupLabel:!1,indeterminate:!1,label:"Checkbox label",nativeIndeterminateBehaviour:!1,required:!1,size:"default",validationStatus:"",validationText:"",value:"checkbox-value"};function _createMdxContent(props){const _components=Object.assign({h3:"h3"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Checkbox",component:components.rG}),"\n",(0,jsx_runtime.jsx)(dist.VY,{markdown:readme_namespaceObject+ic_checkbox_group_readme_namespaceObject}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default",children:(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"required",children:"Required"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Required",children:(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",required:!0,name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Disabled",children:(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",disabled:!0,children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Disabled 1",disabled:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Unselected / Disabled 2",disabled:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled 3",disabled:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName4",label:"Selected / Disabled",disabled:!0,checked:!0})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"sizes",children:"Sizes"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsxs)(dist.gG,{name:"Sizes",children:[(0,jsx_runtime.jsxs)(components.rG,{size:"large",label:"These are checkboxes with the 'size' attribute set on them individually",name:"group1",children:[(0,jsx_runtime.jsx)(components.sz,{size:"small",value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{size:"default",value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{size:"large",value:"valueName3",label:"Unselected / Disabled",disabled:!0})]}),(0,jsx_runtime.jsxs)(components.rG,{size:"small",label:"This is a checkbox group with small checkboxes",name:"group2",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]}),(0,jsx_runtime.jsxs)(components.rG,{size:"default",label:"This is a checkbox group with default-sized checkboxes",name:"group3",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]}),(0,jsx_runtime.jsxs)(components.rG,{size:"large",label:"This is a checkbox group with large checkboxes",name:"group4",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]})]})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"hidden-label",children:"Hidden label"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Hidden label",children:(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",hideLabel:!0,name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"conditional-dynamic",children:"Conditional dynamic"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Conditional dynamic",children:(0,jsx_runtime.jsxs)(components.rG,{label:"Conditional dynamic",name:"1",onIcChange:ev=>console.log(ev.detail.selectedOption.label,ev.detail.selectedOption.checked),children:[(0,jsx_runtime.jsx)(components.sz,{additionalFieldDisplay:"dynamic",value:"valueName1",label:"option1",children:(0,jsx_runtime.jsx)(components.k2,{slot:"additional-field",placeholder:"Placeholder",label:"What's your favourite type of coffee?"})}),(0,jsx_runtime.jsx)(components.sz,{additionalFieldDisplay:"dynamic",value:"valueName2",label:"option2 - error example",children:(0,jsx_runtime.jsx)(components.k2,{validationStatus:"error",validationText:"now it has really gone to (coffee) pot",slot:"additional-field",placeholder:"Placeholder",label:"What's your favourite type of coffee?"})}),(0,jsx_runtime.jsx)(components.sz,{additionalFieldDisplay:"dynamic",value:"valueName3",label:"option3",children:(0,jsx_runtime.jsx)(components.k2,{slot:"additional-field",placeholder:"Placeholder",label:"What's your favourite type of coffee?"})})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"conditional-static",children:"Conditional static"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Conditional static",parameters:{loki:{skip:!0}},children:(0,jsx_runtime.jsxs)(components.rG,{label:" Conditional static ",name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"option1",children:(0,jsx_runtime.jsx)(components.k2,{slot:"additional-field",label:"What's your favourite type of coffee?"})}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"option2"})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"helper-text",children:"Helper text"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Helper text",children:(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",helperText:"Helper text",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"validation",children:"Validation"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Validation",children:(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",validationStatus:"error",validationText:"Error message",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"form---this-shows-how-the-checkbox-button-works-within-a-form-and-is-where-the-value-of-the-checkbox-button-selected-will-appear-in-the-consolelog",children:"Form - This shows how the checkbox button works within a form and is where the value of the checkbox button selected will appear in the console.log"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Form",children:(0,jsx_runtime.jsx)(Form,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"indeterminate",children:"Indeterminate"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Indeterminate",children:(0,jsx_runtime.jsx)(Indeterminate,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"indeterminate-with-children",children:"Indeterminate with children"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Indeterminate with children",children:(0,jsx_runtime.jsx)(IndeterminateWithChildren,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"textfield-value-change",children:"TextField value change"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"TextField value change",children:(0,jsx_runtime.jsx)(TextField,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"controlled",children:"Controlled"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Controlled",children:(0,jsx_runtime.jsx)(Controlled,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"uncontrolled",children:"Uncontrolled"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Uncontrolled",children:(0,jsx_runtime.jsx)(Uncontrolled,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"dynamic-loading",children:"Dynamic loading"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Dynamic loading",children:(0,jsx_runtime.jsx)(CheckOptionsDynamic,{})})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"playground",children:"Playground"}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{args:defaultArgs,argTypes:{additionalFieldDisplay:{options:["dynamic","static"],control:{type:"inline-radio"}},additionalFieldSlot:{options:["additional-field",""],control:{type:"select"}},size:{options:["default","large","small"],control:{type:"inline-radio"}},validationStatus:{options:["warning","error","success",""],control:{type:"select"}}},name:"Playground",children:args=>{const[{checked},updateArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)();return(0,jsx_runtime.jsx)(components.rG,{disabled:args.disabled,label:args.groupLabel,size:args.size,helperText:args.helperText,hideLabel:args.hideGroupLabel,required:args.required,validationStatus:args.validationStatus,validationText:args.validationText,children:(0,jsx_runtime.jsx)(components.sz,{disabled:args.disabled,label:args.label,value:args.value,size:args.size,hideLabel:args.hideLabel,indeterminate:args.indeterminate,checked,additionalFieldDisplay:args.additionalFieldDisplay,dynamicText:args.dynamicText,nativeIndeterminateBehaviour:args.nativeIndeterminateBehaviour,onIcCheck:ev=>updateArgs({checked:ev.target.checked}),children:(0,jsx_runtime.jsx)(components.k2,{slot:args.additionalFieldSlot,placeholder:"Placeholder",label:"What's your favourite type of coffee?"})})})}})})]})}const defaultStory=()=>(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]});defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:'<IcCheckboxGroup label="This is a label" name="1"><IcCheckbox value="valueName1" label="Unselected / Default" /><IcCheckbox value="valueName2" label="Selected / Default" checked /><IcCheckbox value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>'}};const required=()=>(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",required:!0,name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]});required.storyName="Required",required.parameters={storySource:{source:'<IcCheckboxGroup label="This is a label" required name="1"><IcCheckbox value="valueName1" label="Unselected / Default" /><IcCheckbox value="valueName2" label="Selected / Default" checked /><IcCheckbox value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>'}};const disabled=()=>(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",disabled:!0,children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Disabled 1",disabled:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Unselected / Disabled 2",disabled:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled 3",disabled:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName4",label:"Selected / Disabled",disabled:!0,checked:!0})]});disabled.storyName="Disabled",disabled.parameters={storySource:{source:'<IcCheckboxGroup label="This is a label" name="1" disabled><IcCheckbox value="valueName1" label="Unselected / Disabled 1" disabled /><IcCheckbox value="valueName2" label="Unselected / Disabled 2" disabled /><IcCheckbox value="valueName3" label="Unselected / Disabled 3" disabled /><IcCheckbox value="valueName4" label="Selected / Disabled" disabled checked /></IcCheckboxGroup>'}};const sizes=()=>(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(components.rG,{size:"large",label:"These are checkboxes with the 'size' attribute set on them individually",name:"group1",children:[(0,jsx_runtime.jsx)(components.sz,{size:"small",value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{size:"default",value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{size:"large",value:"valueName3",label:"Unselected / Disabled",disabled:!0})]}),(0,jsx_runtime.jsxs)(components.rG,{size:"small",label:"This is a checkbox group with small checkboxes",name:"group2",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]}),(0,jsx_runtime.jsxs)(components.rG,{size:"default",label:"This is a checkbox group with default-sized checkboxes",name:"group3",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]}),(0,jsx_runtime.jsxs)(components.rG,{size:"large",label:"This is a checkbox group with large checkboxes",name:"group4",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]})]});sizes.storyName="Sizes",sizes.parameters={storySource:{source:'<IcCheckboxGroup size="large" label="These are checkboxes with the \'size\' attribute set on them individually" name="group1"><IcCheckbox size="small" value="valueName1" label="Unselected / Default" /><IcCheckbox size="default" value="valueName2" label="Selected / Default" checked /><IcCheckbox size="large" value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>\n<IcCheckboxGroup size="small" label="This is a checkbox group with small checkboxes" name="group2"><IcCheckbox value="valueName1" label="Unselected / Default" /><IcCheckbox value="valueName2" label="Selected / Default" checked /><IcCheckbox value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>\n<IcCheckboxGroup size="default" label="This is a checkbox group with default-sized checkboxes" name="group3"><IcCheckbox value="valueName1" label="Unselected / Default" /><IcCheckbox value="valueName2" label="Selected / Default" checked /><IcCheckbox value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>\n<IcCheckboxGroup size="large" label="This is a checkbox group with large checkboxes" name="group4"><IcCheckbox value="valueName1" label="Unselected / Default" /><IcCheckbox value="valueName2" label="Selected / Default" checked /><IcCheckbox value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>'}};const hiddenLabel=()=>(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",hideLabel:!0,name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]});hiddenLabel.storyName="Hidden label",hiddenLabel.parameters={storySource:{source:'<IcCheckboxGroup label="This is a label" hideLabel name="1"><IcCheckbox value="valueName1" label="Unselected / Default" /><IcCheckbox value="valueName2" label="Selected / Default" checked /><IcCheckbox value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>'}};const conditionalDynamic=()=>(0,jsx_runtime.jsxs)(components.rG,{label:"Conditional dynamic",name:"1",onIcChange:ev=>console.log(ev.detail.selectedOption.label,ev.detail.selectedOption.checked),children:[(0,jsx_runtime.jsx)(components.sz,{additionalFieldDisplay:"dynamic",value:"valueName1",label:"option1",children:(0,jsx_runtime.jsx)(components.k2,{slot:"additional-field",placeholder:"Placeholder",label:"What's your favourite type of coffee?"})}),(0,jsx_runtime.jsx)(components.sz,{additionalFieldDisplay:"dynamic",value:"valueName2",label:"option2 - error example",children:(0,jsx_runtime.jsx)(components.k2,{validationStatus:"error",validationText:"now it has really gone to (coffee) pot",slot:"additional-field",placeholder:"Placeholder",label:"What's your favourite type of coffee?"})}),(0,jsx_runtime.jsx)(components.sz,{additionalFieldDisplay:"dynamic",value:"valueName3",label:"option3",children:(0,jsx_runtime.jsx)(components.k2,{slot:"additional-field",placeholder:"Placeholder",label:"What's your favourite type of coffee?"})})]});conditionalDynamic.storyName="Conditional dynamic",conditionalDynamic.parameters={storySource:{source:'<IcCheckboxGroup label="Conditional dynamic" name="1" onIcChange={ev => console.log(ev.detail.selectedOption.label, ev.detail.selectedOption.checked)}><IcCheckbox additionalFieldDisplay="dynamic" value="valueName1" label="option1"><IcTextField slot="additional-field" placeholder="Placeholder" label="What\'s your favourite type of coffee?" /></IcCheckbox><IcCheckbox additionalFieldDisplay="dynamic" value="valueName2" label="option2 - error example"><IcTextField validationStatus="error" validationText="now it has really gone to (coffee) pot" slot="additional-field" placeholder="Placeholder" label="What\'s your favourite type of coffee?" /></IcCheckbox><IcCheckbox additionalFieldDisplay="dynamic" value="valueName3" label="option3"><IcTextField slot="additional-field" placeholder="Placeholder" label="What\'s your favourite type of coffee?" /></IcCheckbox></IcCheckboxGroup>'}};const conditionalStatic=()=>(0,jsx_runtime.jsxs)(components.rG,{label:" Conditional static ",name:"1",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"option1",children:(0,jsx_runtime.jsx)(components.k2,{slot:"additional-field",label:"What's your favourite type of coffee?"})}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"option2"})]});conditionalStatic.storyName="Conditional static",conditionalStatic.parameters={storySource:{source:'<IcCheckboxGroup label=" Conditional static " name="1"><IcCheckbox value="valueName1" label="option1"><IcTextField slot="additional-field" label="What\'s your favourite type of coffee?" /></IcCheckbox><IcCheckbox value="valueName2" label="option2" /></IcCheckboxGroup>'},loki:{skip:!0}};const helperText=()=>(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",helperText:"Helper text",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]});helperText.storyName="Helper text",helperText.parameters={storySource:{source:'<IcCheckboxGroup label="This is a label" name="1" helperText="Helper text"><IcCheckbox value="valueName1" label="Unselected / Default" /><IcCheckbox value="valueName2" label="Selected / Default" checked /><IcCheckbox value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>'}};const validation=()=>(0,jsx_runtime.jsxs)(components.rG,{label:"This is a label",name:"1",validationStatus:"error",validationText:"Error message",children:[(0,jsx_runtime.jsx)(components.sz,{value:"valueName1",label:"Unselected / Default"}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName2",label:"Selected / Default",checked:!0}),(0,jsx_runtime.jsx)(components.sz,{value:"valueName3",label:"Unselected / Disabled",disabled:!0})]});validation.storyName="Validation",validation.parameters={storySource:{source:'<IcCheckboxGroup label="This is a label" name="1" validationStatus="error" validationText="Error message"><IcCheckbox value="valueName1" label="Unselected / Default" /><IcCheckbox value="valueName2" label="Selected / Default" checked /><IcCheckbox value="valueName3" label="Unselected / Disabled" disabled /></IcCheckboxGroup>'}};const ic_checkbox_stories_form=()=>(0,jsx_runtime.jsx)(Form,{});ic_checkbox_stories_form.storyName="Form",ic_checkbox_stories_form.parameters={storySource:{source:"<Form />"}};const indeterminate=()=>(0,jsx_runtime.jsx)(Indeterminate,{});indeterminate.storyName="Indeterminate",indeterminate.parameters={storySource:{source:"<Indeterminate />"}};const indeterminateWithChildren=()=>(0,jsx_runtime.jsx)(IndeterminateWithChildren,{});indeterminateWithChildren.storyName="Indeterminate with children",indeterminateWithChildren.parameters={storySource:{source:"<IndeterminateWithChildren />"}};const textFieldValueChange=()=>(0,jsx_runtime.jsx)(TextField,{});textFieldValueChange.storyName="TextField value change",textFieldValueChange.parameters={storySource:{source:"<TextField />"}};const controlled=()=>(0,jsx_runtime.jsx)(Controlled,{});controlled.storyName="Controlled",controlled.parameters={storySource:{source:"<Controlled />"}};const uncontrolled=()=>(0,jsx_runtime.jsx)(Uncontrolled,{});uncontrolled.storyName="Uncontrolled",uncontrolled.parameters={storySource:{source:"<Uncontrolled />"}};const dynamicLoading=()=>(0,jsx_runtime.jsx)(CheckOptionsDynamic,{});dynamicLoading.storyName="Dynamic loading",dynamicLoading.parameters={storySource:{source:"<CheckOptionsDynamic />"}};const playground=args=>{const[{checked},updateArgs]=(0,external_STORYBOOK_MODULE_CLIENT_API_.useArgs)();return(0,jsx_runtime.jsx)(components.rG,{disabled:args.disabled,label:args.groupLabel,size:args.size,helperText:args.helperText,hideLabel:args.hideGroupLabel,required:args.required,validationStatus:args.validationStatus,validationText:args.validationText,children:(0,jsx_runtime.jsx)(components.sz,{disabled:args.disabled,label:args.label,value:args.value,size:args.size,hideLabel:args.hideLabel,indeterminate:args.indeterminate,checked,additionalFieldDisplay:args.additionalFieldDisplay,dynamicText:args.dynamicText,nativeIndeterminateBehaviour:args.nativeIndeterminateBehaviour,onIcCheck:ev=>updateArgs({checked:ev.target.checked}),children:(0,jsx_runtime.jsx)(components.k2,{slot:args.additionalFieldSlot,placeholder:"Placeholder",label:"What's your favourite type of coffee?"})})})};playground.storyName="Playground",playground.argTypes={additionalFieldDisplay:{options:["dynamic","static"],control:{type:"inline-radio"}},additionalFieldSlot:{options:["additional-field",""],control:{type:"select"}},size:{options:["default","large","small"],control:{type:"inline-radio"}},validationStatus:{options:["warning","error","success",""],control:{type:"select"}}},playground.args=defaultArgs,playground.parameters={storySource:{source:'args => {\n  const [{\n    checked\n  }, updateArgs] = useArgs();\n  return <IcCheckboxGroup disabled={args.disabled} label={args.groupLabel} size={args.size} helperText={args.helperText} hideLabel={args.hideGroupLabel} required={args.required} validationStatus={args.validationStatus} validationText={args.validationText}>\n          <IcCheckbox disabled={args.disabled} label={args.label} value={args.value} size={args.size} hideLabel={args.hideLabel} indeterminate={args.indeterminate} checked={checked} additionalFieldDisplay={args.additionalFieldDisplay} dynamicText={args.dynamicText} nativeIndeterminateBehaviour={args.nativeIndeterminateBehaviour} onIcCheck={ev => updateArgs({\n      checked: ev.target.checked\n    })}>\n            <IcTextField slot={args.additionalFieldSlot} placeholder="Placeholder" label="What\'s your favourite type of coffee?" />\n          </IcCheckbox>\n        </IcCheckboxGroup>;\n}'}};const componentMeta={title:"Checkbox",component:components.rG,tags:["stories-mdx"],includeStories:["defaultStory","required","disabled","sizes","hiddenLabel","conditionalDynamic","conditionalStatic","helperText","validation","form","indeterminate","indeterminateWithChildren","textFieldValueChange","controlled","uncontrolled","dynamicLoading","playground"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_checkbox_stories=componentMeta,__namedExportsOrder=["Form","Indeterminate","IndeterminateWithChildren","TextField","Controlled","Uncontrolled","CheckOptionsDynamic","defaultArgs","defaultStory","required","disabled","sizes","hiddenLabel","conditionalDynamic","conditionalStatic","helperText","validation","form","indeterminate","indeterminateWithChildren","textFieldValueChange","controlled","uncontrolled","dynamicLoading","playground"]}}]);