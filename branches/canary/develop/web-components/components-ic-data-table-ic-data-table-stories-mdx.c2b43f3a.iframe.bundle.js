/*! For license information please see components-ic-data-table-ic-data-table-stories-mdx.c2b43f3a.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_ukic_canary_web_components=self.webpackChunk_ukic_canary_web_components||[]).push([[9717],{"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Hl:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Hl,W8:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.W8,gG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.gG});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/components/ic-data-table/ic-data-table.stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{__namedExportsOrder:()=>__namedExportsOrder,basic:()=>basic,cellOverrides:()=>cellOverrides,columnOverrides:()=>columnOverrides,customIcons:()=>customIcons,customRowHeights:()=>customRowHeights,customTitleBar:()=>customTitleBar,dataTruncationSeeMoreSeeLess:()=>dataTruncationSeeMoreSeeLess,dataTruncationTooltip:()=>dataTruncationTooltip,default:()=>ic_data_table_stories,defaultEmptyState:()=>defaultEmptyState,dense:()=>dense,devArea:()=>devArea,embedded:()=>embedded,largeDataSet:()=>largeDataSet,linksAndElementsInData:()=>linksAndElementsInData,loadingState:()=>loadingState,pagination:()=>pagination,rowHeaders:()=>rowHeaders,rowOverrides:()=>rowOverrides,slottedEmptyState:()=>slottedEmptyState,slottedPaginationBar:()=>slottedPaginationBar,sort:()=>sort,sortOptions:()=>sortOptions,spacious:()=>spacious,stickyColumnHeaders:()=>stickyColumnHeaders,tableSizingAndColumnWidth:()=>tableSizingAndColumnWidth,textWrap:()=>textWrap,updatingData:()=>updatingData,updatingState:()=>updatingState});__webpack_require__("./node_modules/react/index.js");var lib=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs");const ROW_HEADER_TITLES=["Employee","Employee","Manager","Employee","Apprentice"],imageIconSVG='<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>',userIconSVG='<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M480-481q-66 0-108-42t-42-108q0-66 42-108t108-42q66 0 108 42t42 108q0 66-42 108t-108 42ZM160-160v-94q0-38 19-65t49-41q67-30 128.5-45T480-420q62 0 123 15.5t127.921 44.694q31.301 14.126 50.19 40.966Q800-292 800-254v94H160Zm60-60h520v-34q0-16-9.5-30.5T707-306q-64-31-117-42.5T480-360q-57 0-111 11.5T252-306q-14 7-23 21.5t-9 30.5v34Zm260-321q39 0 64.5-25.5T570-631q0-39-25.5-64.5T480-721q-39 0-64.5 25.5T390-631q0 39 25.5 64.5T480-541Zm0-90Zm0 411Z"/></svg>',COLS=[{key:"firstName",title:"First name",dataType:"string"},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],COLS_WIDTH=[{key:"firstName",title:"First name",dataType:"string",columnWidth:"15%"},{key:"lastName",title:"Last name",dataType:"string",columnWidth:"300px"},{key:"age",title:"Age",dataType:"number",columnWidth:{maxWidth:"100px"}},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],VERY_LONG_DATA=(rows=100)=>{const nextData=[];for(let i=0;i<rows;i++){const obj={firstName:`firstName-${i}`,lastName:`lastName-${i}`,age:i,jobTitle:`jobTitle-${i}`,address:`${i} Main Street, Town, County, Postcode AA${i}${i} BB${i}${i}`,rowOptions:{textWrap:i%2==0}};nextData.push(obj)}return nextData},COLS_ALIGNMENT=[{key:"firstName",title:"First name",dataType:"string",columnAlignment:{horizontal:"center",vertical:"middle"}},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],DATA=[{firstName:"Joe",lastName:"Bartholomew Christoper Augustine Zacchaeus Ashford",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:"Sarah",lastName:"Smith",age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],TEXT_WRAP_LONG_DATA=[{name:"John Smith",age:36,department:"Accounts & Finance",employeeNumber:1,jobTitle:{data:"Senior Financial Operations and Reporting Analyst",textWrap:!0}},{name:"Sally Jones",age:32,department:"Engineering",employeeNumber:2,jobTitle:"Senior Software Engineer, Site Reliability Engineering (Microsoft Azure)"},{name:"Tim Rayes",age:41,department:"Sales and Marketing",employeeNumber:3,jobTitle:"Regional Sales and Marketing Strategy Director (Europe, the Middle East, and Africa)",rowOptions:{textWrap:!0}},{name:"Luke Fisher",age:"23",department:"Engineering (Mobile App Development)",employeeNumber:4,jobTitle:"Junior Tester"},{name:"Jane Lock",age:34,department:"Engineering",employeeNumber:5,jobTitle:"Junior Product Manager"},{name:"Margaret Hale",age:45,department:"HR",employeeNumber:6,jobTitle:"Junior Human Resource Information Specialist"}],COLUMNS_NO_TEXT_WRAP=[{key:"name",title:"Name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"department",title:"Department",dataType:"string"},{key:"employeeNumber",title:"Employee Number",dataType:"number"},{key:"jobTitle",title:"Job Title",dataType:"string"}],COLUMNS_TEXT_WRAP=[{key:"name",title:"Name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"department",title:"Department",dataType:"string",textWrap:!0},{key:"employeeNumber",title:"Employee Number",dataType:"number"},{key:"jobTitle",title:"Job Title",dataType:"string"}],LONG_DATA_VALUES_UPDATE=[{name:"Michael Phelps",age:23,department:"United States",employeeNumber:1,jobTitle:"Swimmer"},{name:"Natalie Coughlin",age:25,department:"United States",employeeNumber:2,jobTitle:"Swimmer"},{name:"Debbie Flood",age:28,department:"Great Britain",employeeNumber:3,jobTitle:"7 time Olympic and Commonwealth Champion for Rowing"},{name:"Gillian Charleton",age:"22",department:"Canada",employeeNumber:4,jobTitle:"Cycling"}],DATA_CELL_ALIGNMENT=[{firstName:{data:"Joe",cellAlignment:{horizontal:"center",vertical:"middle"},emphasis:"high"},lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:"Sarah",lastName:"Smith",age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],ROW_ALIGNMENT=[{header:{title:ROW_HEADER_TITLES[0],rowAlignment:"middle",emphasis:"high"},firstName:"Joe",lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{header:{title:ROW_HEADER_TITLES[1]},firstName:"Sarah",lastName:"Smith",age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[2]},firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[3]},firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{header:{title:ROW_HEADER_TITLES[4]},firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],LONG_COLS=[{key:"employeeNumber",title:"Employee number",dataType:"number",columnAlignment:{horizontal:"left"}},{key:"name",title:"Name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],ICON_COLS=[{key:"firstName",title:"First name",dataType:"string",cellAlignment:"right",columnAlignment:{horizontal:"right",vertical:"middle"},icon:{icon:imageIconSVG,onAllCells:!0,hideOnHeader:!0}},{key:"lastName",title:"Last name",dataType:"string",cellAlignment:"center",columnAlignment:{horizontal:"center",vertical:"bottom"},icon:{icon:imageIconSVG,onAllCells:!0}},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address",icon:{icon:imageIconSVG}}],ICON_DATA=[{firstName:{data:"Joe",icon:userIconSVG},lastName:"Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{firstName:"Sarah",lastName:{data:"Smith",icon:userIconSVG},age:28,jobTitle:"Analyst",address:"2 Main Street, Town, Country, Postcode"},{firstName:"Mark",lastName:"Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{firstName:"Naomi",lastName:"Thomas",age:32,jobTitle:{data:"Developer",icon:userIconSVG},address:"8 Side Street, Town, Country, Postcode"},{firstName:"Luke",lastName:"Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],LONG_DATA=[{employeeNumber:1,name:"Joe Bloggs",age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{employeeNumber:2,name:"Sarah Jones",age:28,jobTitle:"Developer",address:"2 Main Street, Town, Country, Postcode"},{employeeNumber:3,name:"Mark Owens",age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, County, Postcode"},{employeeNumber:4,name:"Naomi Thomas",age:32,jobTitle:"Developer",address:"8 Side Street, Town, Country, Postcode"},{employeeNumber:5,name:"Bartholomew Christoper Augustine Zacchaeus Ashford",age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"},{employeeNumber:6,name:"Dave Smith",age:33,jobTitle:"Analyst",address:"4 Extra Street, Town, County, Postcode"},{employeeNumber:7,name:"Amy Fox",age:27,jobTitle:"Analyst",address:"3 Main Street, Town, Country, Postcode"},{employeeNumber:8,name:"Mary Cooper",age:31,jobTitle:"Developer",address:"8 Main Street, Town, County, Postcode"},{employeeNumber:9,name:"Alice Cole",age:38,jobTitle:"Team Lead",address:"10 High Street, Town, Country, Postcode"},{employeeNumber:10,name:"Ben Fields",age:40,jobTitle:"Team Lead",address:"14 High Street, Town, Country, Postcode"},{employeeNumber:11,name:"Chrysanthemum Finnleigh Carrington Savannah Norton",age:32,jobTitle:"Analyst",address:"6 Key Street, Town, County, Postcode"},{employeeNumber:12,name:"Ashley Langford",age:29,jobTitle:"Developer",address:"7 Long Street, Town, Country, Postcode"},{employeeNumber:13,name:"Michael Hall",age:35,jobTitle:"Team Lead",address:"5 Long Street, Town, County, Postcode"},{employeeNumber:14,name:"David Frank",age:28,jobTitle:"Developer",address:"3 Side Street, Town, Country, Postcode"},{employeeNumber:15,name:"Bernadette Mariah Genevieve Maddison Lincoln",age:23,jobTitle:"Developer",address:"10 Main Street, Town, Country, Postcode"},{employeeNumber:16,name:"Will Barns",age:36,jobTitle:"Analyst",address:"1 New Street, Town, County, Postcode"},{employeeNumber:17,name:"Elizabeth Long",age:43,jobTitle:"Analyst",address:"9 Short Street, Town, Country, Postcode"},{employeeNumber:18,name:"Keith Jones",age:37,jobTitle:"Developer",address:"11 Main Street, Town, County, Postcode"},{employeeNumber:19,name:"Olivia Brown",age:19,jobTitle:"Trainee Analyst",address:"4 Side Street, Town, Country, Postcode"},{employeeNumber:20,name:"Tim Green",age:50,jobTitle:"Developer",address:"2 Long Street, Town, Country, Postcode"}],ROW_HEADER_COLS=[{key:"header",title:"Job type",dataType:"string"},{key:"firstName",title:"First name",dataType:"string"},{key:"lastName",title:"Last name",dataType:"string"},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],ROW_HEADER_DATA=DATA.map(((data,index)=>({header:{title:ROW_HEADER_TITLES[index]},...data}))),COLS_ELEMENTS=[{key:"actions",title:"Actions",dataType:"element",columnAlignment:{horizontal:"center"}},{key:"firstName",title:"First name",dataType:"string"},{key:"actions2",title:"Actions2",dataType:"element",columnAlignment:{horizontal:"center"}},{key:"age",title:"Age",dataType:"number"},{key:"jobTitle",title:"Job title",dataType:"string"},{key:"address",title:"Address",dataType:"address"}],DATA_ELEMENTS=[{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:{data:"Joe",href:"https://www.example.com"},actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:30,jobTitle:"Developer",address:"1 Main Street, Town, County, Postcode"},{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:"Sarah",actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:28,jobTitle:"Senior Software Developer, Site Reliability Engineering",address:"2 Main Street, Town, Country, Postcode"},{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:"Mark",actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:45,jobTitle:"Team Lead",address:"12 Key Street, Town, Country, Postcode"},{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:"Naomi",actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:32,jobTitle:"Analyst",address:"8 Side Street, Town, Country, Postcode"},{actions:"<ic-button variant='destructive' onClick='this.closest(\"tr\").remove()'>Delete</ic-button>",firstName:"Luke",actions2:'<ic-button aria-label="Delete row" variant=\'icon\' onClick=\'this.closest("tr").remove()\'><svg viewBox="0 0 24 24" role="presentation" style="width: 1.5rem; height: 1.5rem;"><path d="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" style="fill: currentcolor;"></path></svg></ic-button>',age:18,jobTitle:"Junior Developer",address:"5 New Street, Town, Country, Postcode"}],createDataTableElement=(caption,columns=COLS,data=DATA)=>{const dataTable=document.createElement("ic-data-table");return dataTable.setAttribute("caption",caption),dataTable.columns=columns,dataTable.data=data,dataTable},Basic=()=>{const dataTable=createDataTableElement("Basic Table");return dataTable.setAttribute("sortable","true"),dataTable},DataTableSizing=()=>{const dataTable=createDataTableElement("Basic Table",COLS_WIDTH,DATA);return dataTable.setAttribute("width","800px"),dataTable.setAttribute("table-layout","auto"),dataTable},LargeDataSet=()=>{const dataTable=createDataTableElement("Basic Table",LONG_COLS,LONG_DATA);return dataTable.setAttribute("sortable","true"),dataTable},Embedded=()=>{const dataTable=createDataTableElement("Embedded Table");return dataTable.setAttribute("embedded","true"),dataTable},Dense=()=>{const dataTableDense=createDataTableElement("Dense Table");return dataTableDense.setAttribute("density","dense"),dataTableDense},Spacious=()=>{const dataTableSpacious=createDataTableElement("Spacious Table");return dataTableSpacious.setAttribute("density","spacious"),dataTableSpacious},Scrollable=()=>{const dataTable=createDataTableElement("Scrollable Table",LONG_COLS,LONG_DATA);dataTable.setAttribute("embedded","true"),dataTable.style.height="366px";const setStickyHeaders=sticky=>{dataTable.setAttribute("sticky-column-headers",`${sticky}`)},stickButton=document.createElement("ic-button"),unstickButton=document.createElement("ic-button");stickButton.innerHTML="Stick Header",unstickButton.innerHTML="Unstick Header",stickButton.addEventListener("click",(()=>setStickyHeaders(!0))),unstickButton.addEventListener("click",(()=>setStickyHeaders(!1)));const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",stickButton),buttonWrapper.insertAdjacentElement("beforeend",unstickButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),dataTable.insertAdjacentElement("afterend",buttonWrapper),wrapper},RowHeaders=()=>createDataTableElement("Row Header Table",ROW_HEADER_COLS,ROW_HEADER_DATA),Sort=()=>{const dataTable=createDataTableElement("Sort",COLS,DATA);return dataTable.setAttribute("sortable","true"),dataTable.addEventListener("icSortChange",(event=>{console.log("Sort changed",event.detail)})),dataTable},SortOptions=()=>{const dataTable=createDataTableElement("Sort Order",COLS,DATA);return dataTable.setAttribute("sortable","true"),dataTable.sortOptions={sortOrders:["descending","unsorted"],defaultColumn:"firstName"},dataTable.addEventListener("icSortChange",(event=>{console.log("Sort changed",event.detail)})),dataTable},Pagination=()=>{const dataTable=createDataTableElement("Pagination",LONG_COLS,LONG_DATA);return dataTable.setAttribute("show-pagination","true"),dataTable.paginationBarOptions={itemsPerPageOptions:[{label:"5",value:"5"},{label:"10",value:"10"},{label:"15",value:"15"}],showItemsPerPageControl:!0,showGoToPageControl:!0},dataTable},ColumnOverrides=()=>createDataTableElement("Column Overrides",COLS_ALIGNMENT,DATA),RowOverrides=()=>createDataTableElement("Row Overrides",ROW_HEADER_COLS,ROW_ALIGNMENT),CellOverrides=()=>createDataTableElement("Cell Overrides",COLS,DATA_CELL_ALIGNMENT),LinksHTMLElements=()=>createDataTableElement("Links and HTML Elements Overrides",COLS_ELEMENTS,DATA_ELEMENTS),Empty=()=>createDataTableElement("Empty State",COLS,null),EmptySlotted=()=>{const dataTable=createDataTableElement("Empty State",COLS,null),emptyState=document.createElement("ic-empty-state");emptyState.setAttribute("aligned","left"),emptyState.setAttribute("heading","Data source error"),emptyState.setAttribute("body","Error loading new data"),emptyState.setAttribute("slot","empty-state");const button=document.createElement("ic-button");return button.innerHTML="Retry",button.setAttribute("slot","actions"),emptyState.appendChild(button),dataTable.appendChild(emptyState),dataTable},Loading=()=>{const dataTable=createDataTableElement("Loading State",COLS,DATA);return dataTable.setAttribute("loading","true"),dataTable},Updating=()=>{const dataTable=createDataTableElement("Updating State",COLS,DATA);return dataTable.updatingOptions={progress:30},dataTable.setAttribute("updating","true"),dataTable},CustomIcons=()=>createDataTableElement("Custom icons",ICON_COLS,ICON_DATA),CustomRowHeights=()=>{const dataTable=createDataTableElement("Custom Row Heights",COLUMNS_NO_TEXT_WRAP,VERY_LONG_DATA(10));dataTable.globalRowHeight=80,dataTable.variableRowHeight=({name,age})=>"John Smith"===name||41===age?200:null;const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights(80))),resetButton.innerHTML="Reset rowHeight to 80";const setButton=document.createElement("ic-button");setButton.addEventListener("click",(()=>{dataTable.globalRowHeight=80,dataTable.variableRowHeight=({name,age})=>"John Smith"===name||41===age?200:null})),setButton.innerHTML="Set global row height";const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",setButton),buttonWrapper.insertAdjacentElement("beforeend",resetButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper},TruncationShowHide=()=>{const dataTable=CustomRowHeights().querySelector("ic-data-table");dataTable.globalRowHeight=40,dataTable.variableRowHeight=null,dataTable.truncationPattern="show-hide";const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights(40))),resetButton.innerHTML="Reset rowHeight to 40";const setButton=document.createElement("ic-button");setButton.addEventListener("click",(()=>{dataTable.globalRowHeight=80})),setButton.innerHTML="Set globalRowHeight to 80";const updateDataButton=document.createElement("ic-button");updateDataButton.addEventListener("click",(()=>{setTimeout((()=>{dataTable.data=LONG_DATA_VALUES_UPDATE}),500)})),updateDataButton.innerHTML="Update data";const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",setButton),buttonWrapper.insertAdjacentElement("beforeend",resetButton),buttonWrapper.insertAdjacentElement("beforeend",updateDataButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper},TruncationTextWrap=()=>{const dataTable=createDataTableElement("Text Wrap",COLUMNS_TEXT_WRAP,TEXT_WRAP_LONG_DATA);dataTable.globalRowHeight=40,dataTable.variableRowHeight=null;const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper},TruncationTooltip=()=>{const dataTable=CustomRowHeights().querySelector("ic-data-table");dataTable.globalRowHeight=40,dataTable.variableRowHeight=null,dataTable.setAttribute("truncation-pattern","tooltip");const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights(40))),resetButton.innerHTML="Reset rowHeight to 40";const setButton=document.createElement("ic-button");setButton.addEventListener("click",(()=>{dataTable.globalRowHeight=80})),setButton.innerHTML="Set global row heights to 80";const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",setButton),buttonWrapper.insertAdjacentElement("beforeend",resetButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper},CustomTitleBar=()=>{const dataTable=createDataTableElement("Custom Title Bar",COLS,DATA),titleBar=document.createElement("ic-data-table-title-bar");titleBar.setAttribute("description","Data table description that describes the purpose of the table."),titleBar.setAttribute("metadata","128 items | 32gb | Updated: 01/02/03"),titleBar.setAttribute("slot","title-bar");const customDescription=document.createElement("ic-typography");customDescription.setAttribute("variant","body"),customDescription.setAttribute("slot","description"),customDescription.innerHTML='<p>This is some text and <ic-link href="/" inline="">this is an inline link</ic-link> within the text.</p>';const primaryButton=document.createElement("ic-button");primaryButton.setAttribute("slot","primary-action"),primaryButton.setAttribute("size","small"),primaryButton.innerHTML="Primary";const customButtons=[1,2,3].map((x=>{const customButton=document.createElement("ic-button");return customButton.setAttribute("slot","custom-actions"),customButton.setAttribute("variant","icon"),customButton.setAttribute("aria-label",`Icon ${x}`),customButton.innerHTML='<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z" /></svg>',customButton}));return titleBar.append(primaryButton,customDescription),customButtons.forEach((button=>titleBar.append(button))),dataTable.appendChild(titleBar),dataTable},UpdatingData=()=>{const dataTable=createDataTableElement("Updating Data",COLS,[]),pageOptions=[{label:"5",value:"5"}];dataTable.showPagination=!0,dataTable.paginationBarOptions={itemsPerPageOptions:pageOptions,showItemsPerPageControl:!0,showGoToPageControl:!0,rangeLabelType:"page"};const updateDataButton=document.createElement("ic-button");updateDataButton.addEventListener("click",(()=>{dataTable.data=[...dataTable.data,...LONG_DATA]})),updateDataButton.innerHTML="Update data";const clearDataButton=document.createElement("ic-button");clearDataButton.addEventListener("click",(()=>{dataTable.data=[]})),clearDataButton.innerHTML="Clear data";const updatePaginationButton=document.createElement("ic-button");updatePaginationButton.addEventListener("click",(()=>{dataTable.paginationBarOptions={...dataTable.paginationBarOptions,itemsPerPageOptions:[{label:"10",value:"10"},{label:"20",value:"20"},{label:"50",value:"50"}]}})),updatePaginationButton.innerHTML="Update page lengths";const resetPaginationButton=document.createElement("ic-button");resetPaginationButton.addEventListener("click",(()=>{dataTable.paginationBarOptions={...dataTable.paginationBarOptions,itemsPerPageOptions:pageOptions}})),resetPaginationButton.innerHTML="Reset page lengths";const buttonWrapper=document.createElement("div");buttonWrapper.style.display="flex",buttonWrapper.style.paddingTop="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("afterbegin",updateDataButton),buttonWrapper.insertAdjacentElement("beforeend",clearDataButton),buttonWrapper.insertAdjacentElement("beforeend",updatePaginationButton),buttonWrapper.insertAdjacentElement("beforeend",resetPaginationButton);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("afterbegin",dataTable),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper},SlottedPagination=()=>{let itemsPerPage=5;const dataTable=createDataTableElement("slotted-pagination",LONG_COLS,LONG_DATA),paginationBar=document.createElement("ic-pagination-bar");return paginationBar.setAttribute("total-items",`${LONG_DATA.length}`),paginationBar.setAttribute("show-items-per-page-control","true"),paginationBar.itemsPerPageOptions=[{label:"5",value:"5"},{label:"10",value:"10"}],paginationBar.setAttribute("slot","pagination-bar"),paginationBar.addEventListener("icItemsPerPageChange",(ev=>{itemsPerPage=ev.detail.value,dataTable.data=LONG_DATA.slice(0,itemsPerPage)})),paginationBar.addEventListener("icPageChange",(ev=>{const fromRow=(ev.detail.value-1)*itemsPerPage;dataTable.data=LONG_DATA.slice(fromRow,fromRow+itemsPerPage)})),dataTable.appendChild(paginationBar),dataTable},DevArea=()=>{const dataTable=createDataTableElement("Basic Table",COLS,VERY_LONG_DATA(5));dataTable.sortable=!0,dataTable.variableRowHeight=null,dataTable.showPagination=!0;const description=document.createElement("ic-typography");description.innerHTML="\n  Use the buttons to change the state of the Data Tables component.<br /><br />\n  By default, the global row height is set to <b>'auto'</b>. This means the row height will be dictated by the cell with the most lines.<br />\n  In order to view the truncated data, the truncation pattern must first be set and then the row height. The reason for this is, the data will know how to behave if the cell space is reduced.<br />\n  Setting the truncation pattern while the row height is set to auto will not display the truncated data as the table cells\n  will have enough space to show all table cell data.<br /><br />\n  In this demo, the even rows have <b>'textWrap'</b> applied.\n  ";const resetButton=document.createElement("ic-button");resetButton.addEventListener("click",(()=>dataTable.resetRowHeights())),resetButton.innerHTML="Reset row height: auto";const rowHeight40Btn=document.createElement("ic-button");rowHeight40Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=40})),rowHeight40Btn.innerHTML="Set global row height: 40";const rowHeight80Btn=document.createElement("ic-button");rowHeight80Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=80})),rowHeight80Btn.innerHTML="Set global row height: 80";const rowHeight150Btn=document.createElement("ic-button");rowHeight150Btn.addEventListener("click",(()=>{dataTable.globalRowHeight=150})),rowHeight150Btn.innerHTML="Set global row height: 150";const updateRows200Btn=document.createElement("ic-button");updateRows200Btn.addEventListener("click",(()=>{setTimeout((()=>{dataTable.data=VERY_LONG_DATA(200)}),500)})),updateRows200Btn.innerHTML="Update data rows: 200";const tooltipTruncationBtn=document.createElement("ic-button");tooltipTruncationBtn.textContent="truncationPattern: tooltip",tooltipTruncationBtn.addEventListener("click",(()=>{dataTable.truncationPattern="tooltip"}));const showHideTruncationBtn=document.createElement("ic-button");showHideTruncationBtn.textContent="truncationPattern: show-hide",showHideTruncationBtn.addEventListener("click",(()=>{dataTable.truncationPattern="show-hide"}));const buttonWrapper=document.createElement("div");buttonWrapper.className="wrapper",buttonWrapper.style.display="flex",buttonWrapper.style.flexWrap="wrap",buttonWrapper.style.paddingBlock="10px",buttonWrapper.style.gap="8px",buttonWrapper.insertAdjacentElement("beforeend",tooltipTruncationBtn),buttonWrapper.insertAdjacentElement("beforeend",showHideTruncationBtn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight40Btn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight80Btn),buttonWrapper.insertAdjacentElement("beforeend",rowHeight150Btn),buttonWrapper.insertAdjacentElement("beforeend",resetButton),buttonWrapper.insertAdjacentElement("beforeend",updateRows200Btn);const wrapper=document.createElement("div");return wrapper.insertAdjacentElement("beforeend",description),wrapper.insertAdjacentElement("beforeend",buttonWrapper),wrapper.insertAdjacentElement("beforeend",dataTable),wrapper},readme_namespaceObject='# ic-data-table\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                        | Attribute                          | Description                                                                                                                                                                                                                                                                                                       | Type                                                                                                                                                                                  | Default                                                                                                                                                                                                                                                                                                                                                                                             |\n| ------------------------------- | ---------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `caption` _(required)_          | `caption`                          | The title for the table only visible to screen readers.                                                                                                                                                                                                                                                           | `string`                                                                                                                                                                              | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `columns` _(required)_          | --                                 | The column headers for the table.                                                                                                                                                                                                                                                                                 | `IcDataTableColumnObject[]`                                                                                                                                                           | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `data`                          | --                                 | The row content for the table.                                                                                                                                                                                                                                                                                    | `IcDataTableDataType[]`                                                                                                                                                               | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `density`                       | `density`                          | Set the density of the table including font and padding.                                                                                                                                                                                                                                                          | `"default" \\| "dense" \\| "spacious"`                                                                                                                                                  | `"default"`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `embedded`                      | `embedded`                         | Applies a border to the table container.                                                                                                                                                                                                                                                                          | `boolean`                                                                                                                                                                             | `false`                                                                                                                                                                                                                                                                                                                                                                                             |\n| `globalRowHeight`               | `global-row-height`                | Sets the row height on all rows in the table that aren\'t set using the `variableRowHeight` method.                                                                                                                                                                                                                | `"auto" \\| number`                                                                                                                                                                    | `"auto"`                                                                                                                                                                                                                                                                                                                                                                                            |\n| `height`                        | `height`                           | Sets the table height. Can be set to `auto` or a specific value in `px`, `rem`, or `%`.                                                                                                                                                                                                                           | `string`                                                                                                                                                                              | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `hideColumnHeaders`             | `hide-column-headers`              | If `true`, column headers will not be visible.                                                                                                                                                                                                                                                                    | `boolean`                                                                                                                                                                             | `false`                                                                                                                                                                                                                                                                                                                                                                                             |\n| `loading`                       | `loading`                          | When set to `true`, the full table will show a loading state, featuring a radial indicator.                                                                                                                                                                                                                       | `boolean`                                                                                                                                                                             | `false`                                                                                                                                                                                                                                                                                                                                                                                             |\n| `loadingOptions`                | --                                 | Sets the props for the circular loading indicator used in the loading state.                                                                                                                                                                                                                                      | `{ appearance?: IcThemeForegroundNoDefault; description?: string; label?: string; labelDuration?: number; max?: number; min?: number; progress?: number; showBackground?: boolean; }` | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `maxWidth`                      | `max-width`                        | Sets the maximum width of the data table. Can be set in `px`, `rem`, or `%`.                                                                                                                                                                                                                                      | `string`                                                                                                                                                                              | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `minWidth`                      | `min-width`                        | Sets the minimum width of the data table. Can be set in `px`, `rem`, or `%`.                                                                                                                                                                                                                                      | `string`                                                                                                                                                                              | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `minimumLoadingDisplayDuration` | `minimum-loading-display-duration` | The minimum amount of time the `loading` state displays for before showing the data. Used to prevent flashing in the component.                                                                                                                                                                                   | `number`                                                                                                                                                                              | `1000`                                                                                                                                                                                                                                                                                                                                                                                              |\n| `paginationBarOptions`          | --                                 | Sets the props for the built-in pagination bar. If the `pagination-bar` slot is used then this prop is ignored.                                                                                                                                                                                                   | `IcPaginationBarOptions`                                                                                                                                                              | `{     itemsPerPageOptions: [       { label: "10", value: "10" },       { label: "25", value: "25" },       { label: "50", value: "50" },     ],     rangeLabelType: "page",     type: "simple",     showItemsPerPageControl: true,     showGoToPageControl: true,     alignment: "right",     appearance: "default",     itemLabel: "Item",     pageLabel: "Page",     hideRangeLabel: false,   }` |\n| `showPagination`                | `show-pagination`                  | If `true`, adds a pagination bar to the bottom of the table.                                                                                                                                                                                                                                                      | `boolean`                                                                                                                                                                             | `false`                                                                                                                                                                                                                                                                                                                                                                                             |\n| `sortOptions`                   | --                                 | Sets the order columns will be sorted in and allows for \'default\' sorts to be added.                                                                                                                                                                                                                              | `{ sortOrders: IcDataTableSortOrderOptions[]; defaultColumn?: string; }`                                                                                                              | `{     sortOrders: ["unsorted", "ascending", "descending"],     defaultColumn: "",   }`                                                                                                                                                                                                                                                                                                             |\n| `sortable`                      | `sortable`                         | If `true`, allows table columns to be sorted using applied sort buttons.                                                                                                                                                                                                                                          | `boolean`                                                                                                                                                                             | `false`                                                                                                                                                                                                                                                                                                                                                                                             |\n| `stickyColumnHeaders`           | `sticky-column-headers`            | If `true`, column headers will remain at the top of the table when scrolling vertically.                                                                                                                                                                                                                          | `boolean`                                                                                                                                                                             | `false`                                                                                                                                                                                                                                                                                                                                                                                             |\n| `stickyRowHeaders`              | `sticky-row-headers`               | If `true`, row headers will remain to the left when scrolling horizontally.                                                                                                                                                                                                                                       | `boolean`                                                                                                                                                                             | `false`                                                                                                                                                                                                                                                                                                                                                                                             |\n| `tableLayout`                   | `table-layout`                     | Sets the layout of the table                                                                                                                                                                                                                                                                                      | `"auto" \\| "fixed"`                                                                                                                                                                   | `"fixed"`                                                                                                                                                                                                                                                                                                                                                                                           |\n| `truncationPattern`             | `truncation-pattern`               | Sets the method used to truncate long text in cells where textWrap is `false`. The `tooltip` truncation pattern allows the overflowing text to be seen in a tooltip. The `show-hide` truncation pattern allows the overflowing text to be shown and hidden using the ic-typography "See more"/"See less" buttons. | `"show-hide" \\| "tooltip"`                                                                                                                                                            | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `updating`                      | `updating`                         | If `true`, the table displays a linear loading indicator below the header row to indicate an updating state.                                                                                                                                                                                                      | `boolean`                                                                                                                                                                             | `false`                                                                                                                                                                                                                                                                                                                                                                                             |\n| `updatingOptions`               | --                                 | Sets the props for the linear loading indicator used in the updating state.                                                                                                                                                                                                                                       | `{ appearance?: IcThemeForegroundNoDefault; description?: string; max?: number; min?: number; progress?: number; }`                                                                   | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `variableRowHeight`             | --                                 | Allows for custom setting of row heights on individual rows based on an individual value from the `data` prop and the row index. If the function returns `null`, that row\'s height will be set to the `globalRowHeight` property.                                                                                 | `(params: { [key: string]: any; index: number; }) => IcDataTableRowHeights`                                                                                                           | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n| `width`                         | `width`                            | Sets the table width. Can be set to `auto` or a specific value in `px`, `rem`, or `%`.                                                                                                                                                                                                                            | `string`                                                                                                                                                                              | `undefined`                                                                                                                                                                                                                                                                                                                                                                                         |\n\n\n## Events\n\n| Event               | Description                                                                                    | Type                             |\n| ------------------- | ---------------------------------------------------------------------------------------------- | -------------------------------- |\n| `icRowHeightChange` | Emitted when the `globalRowHeight` or `variableRowHeight` properties change in the data table. | `CustomEvent<void>`              |\n| `icSortChange`      | Emitted when a column sort button is clicked.                                                  | `CustomEvent<IcSortEventDetail>` |\n\n\n## Methods\n\n### `resetRowHeights(rowHeight?: number | "auto") => Promise<void>`\n\nResets the `globalRowHeight` prop to number or auto and sets the `variableRowHeight` prop to `null`.\n\n#### Parameters\n\n| Name        | Type               | Description |\n| ----------- | ------------------ | ----------- |\n| `rowHeight` | `number \\| "auto"` |             |\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot                                | Description                                                                                                                                                                           |\n| ----------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `"empty-state"`                     | Content is slotted below the table header when there is no data and the table is not loading.                                                                                         |\n| `"pagination-bar"`                  | A custom ic-pagination-bar can be slotted below the data to provide enhanced control over how the data is interacted with when being fetched externally.                              |\n| `"title-bar"`                       | A custom ic-data-table-title-bar can be slotted above the column headers to display additional information about the table.                                                           |\n| `"{COLUMN_KEY}-column-icon"`        | The icon slot for a column header.                                                                                                                                                    |\n| `"{COLUMN_KEY}-{ROW_INDEX}[-icon]"` | Each cell should have its own slot, named using the column tag and the row index, allowing for custom elements to be displayed. Include `-icon` at the end for that cell\'s icon slot. |\n\n\n## Dependencies\n\n### Depends on\n\n- ic-loading-indicator\n- ic-typography\n- ic-link\n- ic-button\n- ic-tooltip\n- ic-empty-state\n- [ic-pagination-bar](../ic-pagination-bar)\n\n### Graph\n```mermaid\ngraph TD;\n  ic-data-table --\x3e ic-loading-indicator\n  ic-data-table --\x3e ic-typography\n  ic-data-table --\x3e ic-link\n  ic-data-table --\x3e ic-button\n  ic-data-table --\x3e ic-tooltip\n  ic-data-table --\x3e ic-empty-state\n  ic-data-table --\x3e ic-pagination-bar\n  ic-loading-indicator --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-tooltip --\x3e ic-typography\n  ic-empty-state --\x3e ic-typography\n  ic-pagination-bar --\x3e ic-typography\n  ic-pagination-bar --\x3e ic-select\n  ic-pagination-bar --\x3e ic-pagination\n  ic-pagination-bar --\x3e ic-tooltip\n  ic-pagination-bar --\x3e ic-text-field\n  ic-pagination-bar --\x3e ic-button\n  ic-select --\x3e ic-input-container\n  ic-select --\x3e ic-input-label\n  ic-select --\x3e ic-input-component-container\n  ic-select --\x3e ic-typography\n  ic-select --\x3e ic-button\n  ic-select --\x3e ic-menu\n  ic-select --\x3e ic-input-validation\n  ic-input-label --\x3e ic-typography\n  ic-menu --\x3e ic-loading-indicator\n  ic-menu --\x3e ic-typography\n  ic-menu --\x3e ic-button\n  ic-input-validation --\x3e ic-typography\n  ic-pagination --\x3e ic-button\n  ic-pagination --\x3e ic-pagination-item\n  ic-pagination-item --\x3e ic-typography\n  ic-text-field --\x3e ic-input-container\n  ic-text-field --\x3e ic-input-label\n  ic-text-field --\x3e ic-input-component-container\n  ic-text-field --\x3e ic-input-validation\n  ic-text-field --\x3e ic-typography\n  style ic-data-table fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n';var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",code:"code",h3:"h3",h4:"h4",pre:"pre",a:"a",strong:"strong",em:"em"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"Web Components/Data Table",component:"ic-data-table",parameters:{componentAPI:{data:readme_namespaceObject}}}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"canary-data-table",children:"[Canary]: Data Table"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use the data table component to display data in a tabular form."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"There are two required props for data table:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:["Caption: ",(0,jsx_runtime.jsx)(_components.code,{children:"string"})]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:["Columns: ",(0,jsx_runtime.jsx)(_components.code,{children:"IcDataTableColumnObject[]"})]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Click the 'Component API' tab to view all the available props, events and slots for data tables."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To use the data table component, import ",(0,jsx_runtime.jsx)(_components.code,{children:"@ukic/canary-web-components"})," into your application."]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"basic",children:"Basic"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"A basic example with no functionality."}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Basic",parameters:{loki:{skip:!0}},children:Basic()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"basic-code-example",children:"Basic code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Basic Table"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      // dataType types: "string" | "number" | "address" | "element" | "date";\n      dataType: "string",\n    },\n    {\n      key: "lastName",\n      title: "Last name",\n      dataType: "string",\n    },\n    {\n      key: "age",\n      title: "Age",\n      dataType: "number",\n    },\n    {\n      key: "jobTitle",\n      title: "Job title",\n      dataType: "string",\n    },\n    {\n      key: "address",\n      title: "Address",\n      dataType: "address",\n    },\n  ];\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    {\n      firstName: "Sarah",\n      lastName: "Smith",\n      age: 28,\n      jobTitle: "Analyst",\n      address: "2 Main Street, Town, Country, Postcode",\n    },\n    {\n      firstName: "Mark",\n      lastName: "Owens",\n      age: 45,\n      jobTitle: "Team Lead",\n      address: "12 Key Street, Town, Country, Postcode",\n    },\n    {\n      firstName: "Naomi",\n      lastName: "Thomas",\n      age: 32,\n      jobTitle: "Developer",\n      address: "8 Side Street, Town, Country, Postcode",\n    },\n    {\n      firstName: "Luke",\n      lastName: "Ashford",\n      age: 18,\n      jobTitle: "Junior Developer",\n      address: "5 New Street, Town, Country, Postcode",\n    },\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"large-data-set",children:"Large Data Set"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Large Data Set",parameters:{loki:{skip:!0}},children:LargeDataSet()})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"embedded",children:"Embedded"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"embedded"})," boolean adds a border around the table so it can be added as a standalone table and is not required to stretch the full width of its parent container."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Embedded",parameters:{loki:{skip:!0}},children:Embedded()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"embedded-code-example",children:"Embedded code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Embedded Table"\n  embedded="true"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"density",children:"Density"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"density"})," variant provides three different styles for the data table."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"dense"})," reduces the padding and font size of the table cells to give the data a more dense style."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"default"})," provides a padding of ",(0,jsx_runtime.jsx)(_components.code,{children:"8px"})," which is the default spacing. This variant is seen in the first ",(0,jsx_runtime.jsx)(_components.a,{href:"#basic",children:"basic"})," example."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"spacious"})," gives the data table a more spacious look and feel by increasing the vertical padding as well as the font size."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"dense",children:"Dense"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Dense",parameters:{loki:{skip:!0}},children:Dense()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"dense-code-example",children:"Dense code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Dense Table"\n  density="dense"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"spacious",children:"Spacious"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Spacious",parameters:{loki:{skip:!0}},children:Spacious()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"spacious-code-example",children:"Spacious code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Spacious Table"\n  density="spacious"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"sticky-column-headers",children:"Sticky column headers"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["When a height for the data table is set, the scroll bar will appear to the right. However, by default, the column headers will move up and out of view making it difficult to understand what the data means.\nThis can be mitigated by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"sticky-column-headers"})," prop which takes a boolean. This can be toggled within the example below."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Sticky Column Headers",parameters:{loki:{skip:!0}},children:Scrollable()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sticky-column-headers-code-example",children:"Sticky column headers code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  style="height: 150px"\n  id="data-table"\n  caption="Sticky header Table"\n  sticky-column-headers="true"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"row-headers",children:"Row headers"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Row headers allow headings to be added to individual rows and styles them as column headings. The column collection includes an additional ",(0,jsx_runtime.jsx)(_components.code,{children:"header"})," key which aligns with the row headers. The structure of the ",(0,jsx_runtime.jsx)(_components.code,{children:"header"})," column is the same as the columns (i.e. key, title, dataType).\nThe data array includes an additional ",(0,jsx_runtime.jsx)(_components.code,{children:"header"})," key which takes an object. The title of the row header is set by passing ",(0,jsx_runtime.jsx)(_components.code,{children:"title"})," as the key and a value."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Row Headers",parameters:{loki:{skip:!0}},children:RowHeaders()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"row-headers-code-example",children:"Row headers code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Row headers"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "header",\n      title: "Job type",\n      dataType: "string",\n    },\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      // Each data row requires a \'header\' key/value pair like below `header: { title: \'Employee\' }`\n      header: { title: \'Employee\' },\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"sort",children:"Sort"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Set ",(0,jsx_runtime.jsx)(_components.code,{children:"sortable"})," to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})," to set the sort functionality on all columns. Sorting can be set to ",(0,jsx_runtime.jsx)(_components.code,{children:"unsorted"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"ascending"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"descending"})," by press the sort buttons next to the column heading."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Sort",parameters:{loki:{skip:!0}},children:Sort()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sort-code-example",children:"Sort code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Sort" sortable="true"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sort-options",children:"Sort options"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["It is possible to change the sort options for the sort buttons. The ",(0,jsx_runtime.jsx)(_components.code,{children:"sortOptions"})," prop takes an object with ",(0,jsx_runtime.jsx)(_components.code,{children:"sortOrders"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"defaultColumn"}),". ",(0,jsx_runtime.jsx)(_components.code,{children:"sortOrders"})," allows the sort order to be amended as we all as remove a sort type. Such as changing the order to ",(0,jsx_runtime.jsx)(_components.code,{children:"descending"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"unsorted"})," and remove ",(0,jsx_runtime.jsx)(_components.code,{children:"ascending"}),". ",(0,jsx_runtime.jsx)(_components.code,{children:"defaultColumn"})," sets which column is ordered by default. This is set by padding the column key as the ",(0,jsx_runtime.jsx)(_components.code,{children:"defaultColumn"})," value."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Sort Options",parameters:{loki:{skip:!0}},children:SortOptions()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sort-options-code-example",children:"Sort options code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Sort Options"\n  sortable="true"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.sortOptions = {\n    sortOrders: [\'descending\', \'unsorted\'],\n    defaultColumn: \'firstName\'\n  };\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"pagination",children:"Pagination"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Pagination allows large data sets to be split into pages in order to make the data easier to digest. Setting ",(0,jsx_runtime.jsx)(_components.code,{children:"show-pagination"})," to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})," will add the ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-pagination"})," component to the bottom of the table. There a several sub components within pagination which are set via the ",(0,jsx_runtime.jsx)(_components.code,{children:"paginationBarOptions"})," prop."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"itemsPerPage"})," allows customization on the number of items on each page. This requires a collection with ",(0,jsx_runtime.jsx)(_components.code,{children:"label"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"value"})," key pairs."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"showItemsPerPageControl"})," shows or hides the ",(0,jsx_runtime.jsx)(_components.code,{children:"itemsPerPage"})," component using ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"false"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"showGoToPageControl"})," displays controls which allows jumping between pages in a non-linear approach."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Pagination",parameters:{loki:{skip:!0}},children:Pagination()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"pagination-code-example",children:"Pagination code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Pagination"\n  show-pagination="true"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.paginationBarOptions = {\n    itemsPerPageOptions: [\n      { label: "5", value: "5" },\n      { label: "10", value: "10" },\n      { label: "15", value: "15" },\n    ],\n    showItemsPerPageControl: true,\n    showGoToPageControl: true,\n  };\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"column-overrides",children:"Column overrides"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["There may be a requirement to style a column differently to the rest of the data to add emphasis. For example, centre align data within the 'first name' column. To do this, add ",(0,jsx_runtime.jsx)(_components.code,{children:"columnAlignment"})," to the column. ",(0,jsx_runtime.jsx)(_components.code,{children:"columnAlignment"})," takes an object which sets the ",(0,jsx_runtime.jsx)(_components.code,{children:"horizontal"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"vertical"})," property."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"horizontal"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"left"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"right"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"center"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"vertical"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"top"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"middle"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"bottom"}),"."]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"emphasis"})," can be added to the column by setting ",(0,jsx_runtime.jsx)(_components.code,{children:"high"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"low"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Column Overrides",parameters:{loki:{skip:!0}},children:ColumnOverrides()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"column-overrides-code-example",children:"Column overrides code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Column Overrides"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n      columnAlignment: { horizontal: \'center\', vertical: \'middle\'},\n      emphasis: \'high\'\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"row-overrides",children:"Row overrides"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Row overrides allow styling to be applied at a row level and is set within the ",(0,jsx_runtime.jsx)(_components.code,{children:"header"})," object. The row overrides are used in conjunction with row headers. The following row overrides options apply:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"rowAlignment"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"left"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"right"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"center"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"emphasis"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"high"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"low"}),"."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Row Overrides",parameters:{loki:{skip:!0}},children:RowOverrides()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"row-overrides-code-example",children:"Row overrides code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Row Overrides"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "header",\n      title: "Job type",\n      dataType: "string",\n    },\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      header: {\n        title: \'Employee\',\n        rowAlignment: \'middle\',\n        emphasis: \'high\'\n      }\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"cell-overrides",children:"Cell overrides"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Cell overrides allows styling to be applied at a cell level. The cell which requires an override accepts an object which requires ",(0,jsx_runtime.jsx)(_components.code,{children:"data"})," and can contain ",(0,jsx_runtime.jsx)(_components.code,{children:"cellAlignment"})," and/or ",(0,jsx_runtime.jsx)(_components.code,{children:"emphasis"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"data"})," is the cell value."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"cellAlignment"})," accepts an object with the following key pairs:","\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"horizontal"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"left"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"right"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"center"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"vertical"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"top"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"middle"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"bottom"}),"."]}),"\n"]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"emphasis"})," accepts ",(0,jsx_runtime.jsx)(_components.code,{children:"high"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"low"}),"."]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Cell Overrides",parameters:{loki:{skip:!0}},children:CellOverrides()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"cell-overrides-code-example",children:"Cell overrides code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Cell Overrides"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      firstName: {\n        data: "Joe",\n        cellAlignment: { horizontal: "center", vertical: "middle" },\n        emphasis: "high",\n      },\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default-empty-state",children:"Default empty state"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["When the table receives no data (either ",(0,jsx_runtime.jsx)(_components.code,{children:"null"})," or an empty array) it will automatically show an ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-empty-state"})," below the headers."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default Empty State",parameters:{loki:{skip:!0}},children:Empty()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"default-empty-state-code-example",children:"Default empty state code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Default Empty State"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"slotted-empty-state",children:"Slotted empty state"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["You can customise your own ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-empty-state"})," component and slot it into the data table using the ",(0,jsx_runtime.jsx)(_components.code,{children:"empty-state"})," slot, to reflect different scenarios."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Slotted Empty State",parameters:{loki:{skip:!0}},children:EmptySlotted()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"slotted-empty-state-code-example",children:"Slotted empty state code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Slotted Empty State">\n  <ic-empty-state\n    aligned="left"\n    heading="Data source error"\n    body="Error loading new data"\n  >\n    <ic-button slot="actions">Retry</ic-button>\n  </ic-empty-state>\n</ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"loading-state",children:"Loading state"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["When a user wants to fetch their data asynchronously, a ",(0,jsx_runtime.jsx)(_components.code,{children:"loading"})," prop can be set to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"}),", which then renders a circular variant of the ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-loading-indicator"}),".\nThe loading indicator can be customised using the ",(0,jsx_runtime.jsx)(_components.code,{children:"loadingOptions"})," prop:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"appearance"})," can be ",(0,jsx_runtime.jsx)(_components.code,{children:"light"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"dark"})]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"description"})," sets the aria-label of the component"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"label"})," sets the visual message"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"labelDuration"})," is the number of milliseconds before the label changes"]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"showBackground"})," allows for a white background and grey border to help the indicator stand out"]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["If it needs to be determinate, use ",(0,jsx_runtime.jsx)(_components.code,{children:"max"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"min"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"progress"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Loading State",parameters:{loki:{skip:!0}},height:"360px",children:Loading()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"loading-state-code-example",children:"Loading state code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Loading State"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n  dataTable.loading = true;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"updating-state",children:"Updating state"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["If data in the table has changed, an ",(0,jsx_runtime.jsx)(_components.code,{children:"updating"})," prop has been supplied to show a linear ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-loading-indicator"})," just above the data rows."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["This prop is also accompanied by an ",(0,jsx_runtime.jsx)(_components.code,{children:"updatingOptions"})," prop, which contains similar options to ",(0,jsx_runtime.jsx)(_components.code,{children:"loadingOptions"}),", minus ",(0,jsx_runtime.jsx)(_components.code,{children:"label"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"labelDuration"})," since the linear version is displayed."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Updating State",parameters:{loki:{skip:!0}},children:Updating()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"updating-state-code-example",children:"Updating state code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Updating State"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n  dataTable.updatingOptions = { progress: 30 };\n  dataTable.updating = true;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"links-and-elements-in-data",children:"Links and elements in data"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Custom HTML elements can be slotted or passed via the ",(0,jsx_runtime.jsx)(_components.code,{children:"data"})," prop to display in certain cells. When using the slotted method, the slot name follows the format of ",(0,jsx_runtime.jsx)(_components.code,{children:"{COLUMN_TAG}-{ROW_INDEX}"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Links and Elements in data",parameters:{loki:{skip:!0}},children:LinksHTMLElements()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"links-and-elements-in-data-code-example",children:"Links and elements in data code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Links and Elements in data"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n    {\n      key: "actions",\n      title: "Actions",\n      dataType: "element",\n      columnAlignment: { horizontal: "center" },\n    },\n  ];\n\n  const data = [\n    {\n      firstName: {\n        data: "Joe",\n        href: "https://www.example.com",\n      },\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n      actions: `<ic-button variant=\'destructive\' onClick=\'this.closest("tr").remove()\'>Delete</ic-button>`,\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"custom-icons",children:"Custom icons"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Custom icons can be added to cells, columns and headers in the data table. To add it to headers, set the icon via the ",(0,jsx_runtime.jsx)(_components.code,{children:"columns"})," prop:"]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-json",children:"icon: {\n  icon: //ICON_STRING_GOES_HERE,\n  onAllCells: //Boolean to determine whether column header icon should be replicated on all cells in the column,\n  hideOnHeader: //Boolean for whether this icon should only be shown on cells and not on the header,\n}\n"})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To add icons to individual cells, they can be added through the ",(0,jsx_runtime.jsx)(_components.code,{children:"data"})," prop, in a similar method to overriding the cell. Cell icons take priority over the ",(0,jsx_runtime.jsx)(_components.code,{children:"onAllCells"})," prop, meaning specific cells can be made to stand out."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Both cells and headers can also have icons slotted in. Cells use the slot format: ",(0,jsx_runtime.jsx)(_components.code,{children:"{COLUMN_KEY}-{ROW_INDEX}-icon"}),", and headers use the format: ",(0,jsx_runtime.jsx)(_components.code,{children:"{COLUMN_KEY}-column-icon"}),". Slotted icons take priority over icons inserted via the ",(0,jsx_runtime.jsx)(_components.code,{children:"columns"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"data"})," props."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Custom Icons",parameters:{loki:{skip:!0}},children:CustomIcons()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"custom-icons-code-example",children:"Custom icons code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Custom Icons"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const imageIconSVG = \'<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"/></svg>\';\n  const userIconSVG = \'<svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 -960 960 960" width="24"><path d="M480-481q-66 0-108-42t-42-108q0-66 42-108t108-42q66 0 108 42t42 108q0 66-42 108t-108 42ZM160-160v-94q0-38 19-65t49-41q67-30 128.5-45T480-420q62 0 123 15.5t127.921 44.694q31.301 14.126 50.19 40.966Q800-292 800-254v94H160Zm60-60h520v-34q0-16-9.5-30.5T707-306q-64-31-117-42.5T480-360q-57 0-111 11.5T252-306q-14 7-23 21.5t-9 30.5v34Zm260-321q39 0 64.5-25.5T570-631q0-39-25.5-64.5T480-721q-39 0-64.5 25.5T390-631q0 39 25.5 64.5T480-541Zm0-90Zm0 411Z"/></svg>\';\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n      cellAlignment: "right",\n      columnAlignment: { horizontal: "right", vertical: "middle" },\n      icon: {\n        icon: imageIconSVG,\n        onAllCells: true,\n        hideOnHeader: true,\n      },\n    },\n    {\n      key: "lastName",\n      title: "Last name",\n      dataType: "string",\n      cellAlignment: "center",\n      columnAlignment: { horizontal: "center", vertical: "bottom" },\n      icon: {\n        icon: imageIconSVG,\n        onAllCells: true,\n      },\n    },\n    ...\n    {\n      key: "address",\n      title: "Address",\n      dataType: "address",\n      icon: {\n        icon: imageIconSVG,\n      },\n    },\n  ];\n\n  const data = [\n    {\n      firstName: {\n        data: "Joe",\n        icon: userIconSVG,\n      },\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    {\n      firstName: "Sarah",\n      lastName: {\n        data: "Smith",\n        icon: userIconSVG,\n      },\n      age: 28,\n      jobTitle: "Analyst",\n      address: "2 Main Street, Town, Country, Postcode",\n    },\n    ...\n    {\n      firstName: "Naomi",\n      lastName: "Thomas",\n      age: 32,\n      jobTitle: {\n        data: "Developer",\n        icon: userIconSVG,\n      },\n      address: "8 Side Street, Town, Country, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"custom-row-heights",children:"Custom row heights"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["A data table can have its rows use custom heights, to help display more data per row. This involves using the ",(0,jsx_runtime.jsx)(_components.code,{children:"globalRowHeight"})," prop, which applies this custom height to all rows."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["For a more granular approach, ",(0,jsx_runtime.jsx)(_components.code,{children:"variableRowHeight"})," exists. This is passed through the data object for each row of data, as well as that row's ",(0,jsx_runtime.jsx)(_components.code,{children:"index"}),". Using these properties, you can write a custom function that will return a number for that row's height based on your criteria.\nReturning ",(0,jsx_runtime.jsx)(_components.code,{children:"null"})," from this function means that the row will use the ",(0,jsx_runtime.jsx)(_components.code,{children:"globalRowHeight"})," property value."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:(0,jsx_runtime.jsx)(_components.em,{children:"NOTE:"})})," If the data table uses the ",(0,jsx_runtime.jsx)(_components.code,{children:"density"})," prop, then your custom value will be scaled depending on the density, in order to keep content readable as the text size changes:"]}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"Dense"})," = 80% of ",(0,jsx_runtime.jsx)(_components.code,{children:"globalRowHeight"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"variableRowHeight"})]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"Spacious"})," = 120% of ",(0,jsx_runtime.jsx)(_components.code,{children:"globalRowHeight"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"variableRowHeight"})]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["E.G: If ",(0,jsx_runtime.jsx)(_components.code,{children:"globalRowHeight"})," = 100, a dense table will set the height to be ",(0,jsx_runtime.jsx)(_components.strong,{children:(0,jsx_runtime.jsx)(_components.em,{children:"80"})}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To quickly reset all row heights to the default, you can run the ",(0,jsx_runtime.jsx)(_components.code,{children:"resetRowHeights"})," method."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["If you'd rather let the row calculate its own height based on its content, either set ",(0,jsx_runtime.jsx)(_components.code,{children:"globalRowHeight"})," to ",(0,jsx_runtime.jsx)(_components.code,{children:"auto"}),", or return ",(0,jsx_runtime.jsx)(_components.code,{children:"auto"})," from ",(0,jsx_runtime.jsx)(_components.code,{children:"variableRowHeight"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Custom Row Heights",parameters:{loki:{skip:!0}},children:CustomRowHeights()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"custom-row-heights-code-example",children:"Custom row heights code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Custom Row Heights"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n  dataTable.globalRowHeight = 80;\n  dataTable.variableRowHeight = ({ firstName, lastName }) => firstName === "Joe" || lastName === "Owens" ? 200 : null;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"custom-title-bar",children:"Custom title bar"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To add additional information about the data held in your data table, you can use the ",(0,jsx_runtime.jsx)(_components.code,{children:"title-bar"})," slot to add an ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-data-table-title-bar"}),", which will appear above the column headers."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The title bar can have a description and metadata added, to provide supporting information to display some context about the data to the user. Primary and custom action slots also exist to allow for actions to be performed that are related to the data, which can be prominently displayed."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-data-table-title-bar"})," has a built-in density selector, which allows a user to quickly change the size and padding of cells to make it more readable. This can also be hidden if preferred."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["More details on ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-data-table-title-bar"})," can be found in the ",(0,jsx_runtime.jsx)("ic-link",{href:"/?path=/story/web-components-data-table-title-bar--basic",inline:"",children:"data table title bar documentation"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Custom Title Bar",parameters:{loki:{skip:!0}},children:CustomTitleBar()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"custom-title-bar-code-example",children:"Custom title bar code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Custom Title Bar">\n  <ic-data-table-title-bar\n    description="Data table description that describes the purpose of the table."\n    metadata="128 items | 32gb | Updated: 01/02/03"\n  >\n    <ic-button slot="primary-action">Primary</ic-button>\n    <ic-button slot="custom-actions" variant="icon" aria-label="Icon 1">\n      <svg\n        xmlns="http://www.w3.org/2000/svg"\n        height="24"\n        viewBox="0 -960 960 960"\n        width="24"\n      >\n        <path\n          d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"\n        />\n      </svg>\n    </ic-button>\n    <ic-button slot="custom-actions" variant="icon" aria-label="Icon 2">\n      <svg\n        xmlns="http://www.w3.org/2000/svg"\n        height="24"\n        viewBox="0 -960 960 960"\n        width="24"\n      >\n        <path\n          d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"\n        />\n      </svg>\n    </ic-button>\n    <ic-button slot="custom-actions" variant="icon" aria-label="Icon 3">\n      <svg\n        xmlns="http://www.w3.org/2000/svg"\n        height="24"\n        viewBox="0 -960 960 960"\n        width="24"\n      >\n        <path\n          d="M180-120q-24 0-42-18t-18-42v-600q0-24 18-42t42-18h600q24 0 42 18t18 42v600q0 24-18 42t-42 18H180Zm0-60h600v-600H180v600Zm56-97h489L578-473 446-302l-93-127-117 152Zm-56 97v-600 600Z"\n        />\n      </svg>\n    </ic-button>\n    <ic-typography slot="description" variant="body">\n      <p>\n        This is some text and\n        <ic-link href="/" inline="">this is an inline link</ic-link> within the\n        text.\n      </p>\n    </ic-typography>\n  </ic-data-table-title-bar>\n</ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"updating-data",children:"Updating data"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The example below demonstrates how the pagination bar responds to changes within the data."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["More details on ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-pagination-bar"})," can be found in the ",(0,jsx_runtime.jsx)("ic-link",{href:"/?path=/story/web-components-pagination-bar--docs",inline:"",children:"pagination bar documentation"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Updating data",parameters:{loki:{skip:!0}},children:UpdatingData()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"updating-data-code-example",children:"Updating data code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Updating Data"></ic-data-table>\n<div style="display:flex; gap:8px; margin-top:8px;">\n  <ic-button onClick="updateData()">Add data</ic-button>\n  <ic-button onClick="updatePageOptions()">Update page lengths</ic-button>\n  <ic-button onClick="clearData()">Reset data</ic-button>\n  <ic-button onClick="resetPageOptions()">Reset page lengths</ic-button>\n</div>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  const pageOptions = [{ label: \'5\', value: \'5\' }];\n\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n\n  const updateData = () => {\n    dataTable.data = [...dataTable.data, ...data];\n  }\n\n  const clearData = () => {\n    dataTable.data = [];\n  }\n\n  const updatePageOptions = () => {\n    dataTable.paginationBarOptions = {\n      ...dataTable.paginationBarOptions,\n      itemsPerPageOptions: [\n        { label: \'10\', value: \'10\' },\n        { label: \'20\', value: \'20\' },\n        { label: \'50\', value: \'50\' }\n      ]\n    };\n  }\n\n  const resetPageOptions = () => {\n    dataTable.paginationBarOptions = {\n      ...dataTable.paginationBarOptions,\n      itemsPerPageOptions: pageOptions\n    };\n  }\n\n  dataTable.columns = columns;\n  dataTable.data = data;\n  dataTable.showPagination = true;\n  dataTable.paginationBarOptions = {\n    itemsPerPageOptions: pageOptions,\n    showItemsPerPageControl: true,\n    showGoToPageControl: true,\n    rangeLabelType: "page"\n  }\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"slotted-pagination-bar",children:"Slotted pagination bar"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["There may be scenarios when using ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-data-table"})," when pagination and data fetching is done using a backend API."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To enable this behaviour, the ",(0,jsx_runtime.jsx)(_components.code,{children:"pagination-bar"})," slot can be utilised to provide a custom ",(0,jsx_runtime.jsx)(_components.code,{children:"ic-pagination-bar"})," component, allowing the user to have more control over how their data is displayed & interacted with."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Slotted pagination bar">\n  <ic-pagination-bar\n    slot="pagination-bar"\n    show-items-per-page-control="true"\n  ></ic-pagination-bar>\n</ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n  // Copy columns array for \'basic\' example\n  const columns = [\n    {\n      key: "firstName",\n      title: "First name",\n      dataType: "string",\n    },\n    ...\n  ];\n  // Copy data array for \'basic\' example\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bloggs",\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n\n  let itemsPerPage = 5;\n  const paginationBar = dataTable.querySelector("ic-pagination-bar");\n  paginationBar.totalItems = data.length;\n  paginationBar.itemsPerPageOptions = [\n    { label: "5", value: "5" },\n    { label: "10", value: "10" },\n  ];\n  paginationBar.addEventListener("icItemsPerPageChange", (ev) => {\n    itemsPerPage = ev.detail.value;\n    dataTable.data = data.slice(0, itemsPerPage);\n  });\n  paginationBar.addEventListener("icPageChange", (ev) => {\n    const fromRow = (ev.detail.value - 1) * itemsPerPage;\n    dataTable.data = data.slice(fromRow, fromRow + itemsPerPage);\n  });\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Slotted pagination bar",parameters:{loki:{skip:!0}},children:SlottedPagination()})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"data-truncation",children:"Data truncation"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"When a row is given a set height, and has content that no longer fits into the cell area, the content becomes truncated. There are two types of truncation:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"tooltip"}),": Adds a line-clamp to the cell and displays the message in a tooltip."]}),"\n",(0,jsx_runtime.jsxs)(_components.li,{children:[(0,jsx_runtime.jsx)(_components.code,{children:"show-hide"}),": Adds a ",(0,jsx_runtime.jsx)(_components.code,{children:"See more/See less"})," button underneath the cell text, allowing the user to display the full content should they wish."]}),"\n"]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["These values are set using the ",(0,jsx_runtime.jsx)(_components.code,{children:"truncation-pattern"})," attribute."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["By default, ",(0,jsx_runtime.jsx)(_components.code,{children:"global-row-height"})," is set to ",(0,jsx_runtime.jsx)(_components.code,{children:"auto"}),". If the ",(0,jsx_runtime.jsx)(_components.code,{children:"truncation-pattern"})," attribute is set to ",(0,jsx_runtime.jsx)(_components.code,{children:"tooltip"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"show-hide"})," while ",(0,jsx_runtime.jsx)(_components.code,{children:"global-row-height"})," is ",(0,jsx_runtime.jsx)(_components.code,{children:"auto"}),", the data will not appear truncated due to the row height being set to the data which has the most height."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To see the data truncated, the ",(0,jsx_runtime.jsx)(_components.code,{children:"global-row-height"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"variable-row-height"})," needs to be explicitly set to a height which is shorter than data which has the most lines."]}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"data-truncation-tooltip",children:"Data truncation tooltip"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{parameters:{loki:{skip:!0}},name:"Data truncation tooltip",children:TruncationTooltip()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"data-truncation-tooltip-code-example",children:"Data truncation tooltip code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Data truncation tooltip"\n  truncation-pattern="tooltip"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "name",\n      title: "Name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      name: "John Smith",\n      age: 36,\n      department: "Accounts & Finance",\n      employeeNumber: 1,\n      jobTitle: "Senior Financial Operations and Reporting Analyst",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"data-truncation-see-more--see-less",children:"Data truncation see more / see less"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{parameters:{loki:{skip:!0}},name:"Data truncation see more / see less",children:TruncationShowHide()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"data-truncation-show--hide-code-example",children:"Data truncation show / hide code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Data truncation see more / see less"\n  truncation-pattern="show-hide"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    {\n      key: "name",\n      title: "Name",\n      dataType: "string",\n    },\n    ...\n  ];\n\n  const data = [\n    {\n      name: "John Smith",\n      age: 36,\n      department: "Accounts & Finance",\n      employeeNumber: 1,\n      jobTitle: "Senior Financial Operations and Reporting Analyst",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"text-wrap",children:"Text Wrap"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Text can be set to wrap in a particular column, row or cell."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Any column, row or cell that text wrap is applied to will ignore the custom height if the custom height is too small and the full content will be shown."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To set text to wrap in a column, add ",(0,jsx_runtime.jsx)(_components.code,{children:"textWrap: true"})," as a key value."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'const column = [\n  { key: "name", title: "Name", dataType: "string" },\n\n  ...\n]\n'})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To set text to wrap in a row, add ",(0,jsx_runtime.jsx)(_components.code,{children:"rowOptions: { textWrap: true }"})," to an object within the data array."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'const data = [\n  {\n    name: "Tim Rayes",\n    age: 41,\n    department: "Sales and Marketing",\n    employeeNumber: 3,\n    jobTitle:\n      "Regional Sales and Marketing Strategy Director (Europe, the Middle East, and Africa)",\n    rowOptions: {\n      textWrap: true\n    }\n  },\n  ...\n]\n'})}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To set text wrap in a cell, add ",(0,jsx_runtime.jsx)(_components.code,{children:"textWrap"})," to a data key within an object."]}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'const data = [\n  {\n    name: {\n      data:"Tim Rayes",\n      textWrap: true\n    }\n    age: 41,\n    department: "Sales and Marketing",\n    employeeNumber: 3,\n    jobTitle:\n      "Regional Sales and Marketing Strategy Director (Europe, the Middle East, and Africa)",\n  },\n  ...\n]\n'})}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{parameters:{loki:{skip:!0}},name:"Text Wrap",children:TruncationTextWrap()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"text-wrap-code-example",children:"Text Wrap code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table id="data-table" caption="Text Wrap"></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    { key: "name", title: "Name", dataType: "string" },\n    { key: "age", title: "Age", dataType: "number" },\n    {\n      key: "department",\n      title: "Department",\n      dataType: "string",\n      textWrap: true,\n    },\n    { key: "employeeNumber", title: "Employee Number", dataType: "number" },\n    { key: "jobTitle", title: "Job Title", dataType: "string" },\n  ];\n\n  const data = [\n    {\n      name: "John Smith",\n      age: 36,\n      department: "Accounts & Finance",\n      employeeNumber: 1,\n      jobTitle: {\n        data: "Senior Financial Operations and Reporting Analyst",\n        textWrap: true,\n      },\n    },\n    ...{\n      name: "Tim Rayes",\n      age: 41,\n      department: "Sales and Marketing",\n      employeeNumber: 3,\n      jobTitle:\n        "Regional Sales and Marketing Strategy Director (Europe, the Middle East, and Africa)",\n      rowOptions: {\n        textWrap: true,\n      },\n    },\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"table-sizing-and-column-width",children:"Table sizing and column width"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The dimensions of the data table can be set using the ",(0,jsx_runtime.jsx)(_components.code,{children:"width"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"height"})," attributes. The attribute accepts dimensions in ",(0,jsx_runtime.jsx)(_components.code,{children:"px"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"%"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"rem"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"auto"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["By default, the width is set to ",(0,jsx_runtime.jsx)(_components.code,{children:"100%"})," so the table spans across the viewport or parent container."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To set the column widths, the ",(0,jsx_runtime.jsx)(_components.code,{children:"columnWidth"})," property should be added to the relevant column within the column array."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The ",(0,jsx_runtime.jsx)(_components.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/table-layout",target:"_blank",rel:"nofollow noopener noreferrer",children:"table layout"})," attribute is vital to how the table resizing and column widths behave. By default, the table layout is set to ",(0,jsx_runtime.jsx)(_components.code,{children:"fixed"}),". If no column width is set, the columns widths will be equally set within the viewport or parent container."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["A table with a ",(0,jsx_runtime.jsx)(_components.code,{children:"fixed"})," layout will force the table column widths to take precedence over the data with the table cells."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["For the column widths to be dictated by the content inside, set the ",(0,jsx_runtime.jsx)(_components.code,{children:"table-layout"})," attribute to ",(0,jsx_runtime.jsx)(_components.code,{children:"auto"})," and set the table ",(0,jsx_runtime.jsx)(_components.code,{children:"width"})," to ",(0,jsx_runtime.jsx)(_components.code,{children:"auto"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To set the min and max width of a table cell, set the ",(0,jsx_runtime.jsx)(_components.code,{children:"table-layout"})," attribute to ",(0,jsx_runtime.jsx)(_components.code,{children:"auto"})," and set a ",(0,jsx_runtime.jsx)(_components.code,{children:"minWidth"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"maxWidth"})," value into ",(0,jsx_runtime.jsx)(_components.code,{children:"columnWidth"}),". The min and max width accepts dimensions in ",(0,jsx_runtime.jsx)(_components.code,{children:"px"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"%"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"rem"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Table sizing and column width",parameters:{loki:{skip:!0}},children:DataTableSizing()})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"table-sizing-and-column-width-code-example",children:"Table sizing and column width code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-html",children:'<ic-data-table\n  id="data-table"\n  caption="Text Wrap"\n  width="800px"\n  table-layout="auto"\n></ic-data-table>\n<script>\n  const dataTable = document.querySelector("#data-table");\n\n  const columns = [\n    { key: "firstName", title: "First name", dataType: "string", columnWidth: "15%" },\n    { key: "lastName", title: "Last name", dataType: "string", columnWidth: "300px" },\n    {\n      key: "age",\n      title: "Age",\n      dataType: "number",\n      columnWidth: {\n        maxWidth: "100px",\n      },\n    },\n    { key: "jobTitle", title: "Job title", dataType: "string" },\n    { key: "address", title: "Address", dataType: "address" },\n  ]\n\n\n  const data = [\n    {\n      firstName: "Joe",\n      lastName: "Bartholomew Christoper Augustine Zacchaeus Ashford", // cspell:disable-line\n      age: 30,\n      jobTitle: "Developer",\n      address: "1 Main Street, Town, County, Postcode",\n    },\n    ...\n  ];\n  dataTable.columns = columns;\n  dataTable.data = data;\n<\/script>\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"development-area",children:"Development Area"}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{parameters:{loki:{skip:!0}},name:"Dev Area",children:DevArea()})})]})}const basic=()=>Basic();basic.storyName="Basic",basic.parameters={storySource:{source:"Basic()"},loki:{skip:!0}};const largeDataSet=()=>LargeDataSet();largeDataSet.storyName="Large Data Set",largeDataSet.parameters={storySource:{source:"LargeDataSet()"},loki:{skip:!0}};const embedded=()=>Embedded();embedded.storyName="Embedded",embedded.parameters={storySource:{source:"Embedded()"},loki:{skip:!0}};const dense=()=>Dense();dense.storyName="Dense",dense.parameters={storySource:{source:"Dense()"},loki:{skip:!0}};const spacious=()=>Spacious();spacious.storyName="Spacious",spacious.parameters={storySource:{source:"Spacious()"},loki:{skip:!0}};const stickyColumnHeaders=()=>Scrollable();stickyColumnHeaders.storyName="Sticky Column Headers",stickyColumnHeaders.parameters={storySource:{source:"Scrollable()"},loki:{skip:!0}};const rowHeaders=()=>RowHeaders();rowHeaders.storyName="Row Headers",rowHeaders.parameters={storySource:{source:"RowHeaders()"},loki:{skip:!0}};const sort=()=>Sort();sort.storyName="Sort",sort.parameters={storySource:{source:"Sort()"},loki:{skip:!0}};const sortOptions=()=>SortOptions();sortOptions.storyName="Sort Options",sortOptions.parameters={storySource:{source:"SortOptions()"},loki:{skip:!0}};const pagination=()=>Pagination();pagination.storyName="Pagination",pagination.parameters={storySource:{source:"Pagination()"},loki:{skip:!0}};const columnOverrides=()=>ColumnOverrides();columnOverrides.storyName="Column Overrides",columnOverrides.parameters={storySource:{source:"ColumnOverrides()"},loki:{skip:!0}};const rowOverrides=()=>RowOverrides();rowOverrides.storyName="Row Overrides",rowOverrides.parameters={storySource:{source:"RowOverrides()"},loki:{skip:!0}};const cellOverrides=()=>CellOverrides();cellOverrides.storyName="Cell Overrides",cellOverrides.parameters={storySource:{source:"CellOverrides()"},loki:{skip:!0}};const defaultEmptyState=()=>Empty();defaultEmptyState.storyName="Default Empty State",defaultEmptyState.parameters={storySource:{source:"Empty()"},loki:{skip:!0}};const slottedEmptyState=()=>EmptySlotted();slottedEmptyState.storyName="Slotted Empty State",slottedEmptyState.parameters={storySource:{source:"EmptySlotted()"},loki:{skip:!0}};const loadingState=()=>Loading();loadingState.storyName="Loading State",loadingState.parameters={storySource:{source:"Loading()"},loki:{skip:!0}};const updatingState=()=>Updating();updatingState.storyName="Updating State",updatingState.parameters={storySource:{source:"Updating()"},loki:{skip:!0}};const linksAndElementsInData=()=>LinksHTMLElements();linksAndElementsInData.storyName="Links and Elements in data",linksAndElementsInData.parameters={storySource:{source:"LinksHTMLElements()"},loki:{skip:!0}};const customIcons=()=>CustomIcons();customIcons.storyName="Custom Icons",customIcons.parameters={storySource:{source:"CustomIcons()"},loki:{skip:!0}};const customRowHeights=()=>CustomRowHeights();customRowHeights.storyName="Custom Row Heights",customRowHeights.parameters={storySource:{source:"CustomRowHeights()"},loki:{skip:!0}};const customTitleBar=()=>CustomTitleBar();customTitleBar.storyName="Custom Title Bar",customTitleBar.parameters={storySource:{source:"CustomTitleBar()"},loki:{skip:!0}};const updatingData=()=>UpdatingData();updatingData.storyName="Updating data",updatingData.parameters={storySource:{source:"UpdatingData()"},loki:{skip:!0}};const slottedPaginationBar=()=>SlottedPagination();slottedPaginationBar.storyName="Slotted pagination bar",slottedPaginationBar.parameters={storySource:{source:"SlottedPagination()"},loki:{skip:!0}};const dataTruncationTooltip=()=>TruncationTooltip();dataTruncationTooltip.storyName="Data truncation tooltip",dataTruncationTooltip.parameters={storySource:{source:"TruncationTooltip()"},loki:{skip:!0}};const dataTruncationSeeMoreSeeLess=()=>TruncationShowHide();dataTruncationSeeMoreSeeLess.storyName="Data truncation see more / see less",dataTruncationSeeMoreSeeLess.parameters={storySource:{source:"TruncationShowHide()"},loki:{skip:!0}};const textWrap=()=>TruncationTextWrap();textWrap.storyName="Text Wrap",textWrap.parameters={storySource:{source:"TruncationTextWrap()"},loki:{skip:!0}};const tableSizingAndColumnWidth=()=>DataTableSizing();tableSizingAndColumnWidth.storyName="Table sizing and column width",tableSizingAndColumnWidth.parameters={storySource:{source:"DataTableSizing()"},loki:{skip:!0}};const devArea=()=>DevArea();devArea.storyName="Dev Area",devArea.parameters={storySource:{source:"DevArea()"},loki:{skip:!0}};const componentMeta={title:"Web Components/Data Table",parameters:{componentAPI:{data:readme_namespaceObject}},tags:["stories-mdx"],includeStories:["basic","largeDataSet","embedded","dense","spacious","stickyColumnHeaders","rowHeaders","sort","sortOptions","pagination","columnOverrides","rowOverrides","cellOverrides","defaultEmptyState","slottedEmptyState","loadingState","updatingState","linksAndElementsInData","customIcons","customRowHeights","customTitleBar","updatingData","slottedPaginationBar","dataTruncationTooltip","dataTruncationSeeMoreSeeLess","textWrap","tableSizingAndColumnWidth","devArea"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_data_table_stories=componentMeta,__namedExportsOrder=["basic","largeDataSet","embedded","dense","spacious","stickyColumnHeaders","rowHeaders","sort","sortOptions","pagination","columnOverrides","rowOverrides","cellOverrides","defaultEmptyState","slottedEmptyState","loadingState","updatingState","linksAndElementsInData","customIcons","customRowHeights","customTitleBar","updatingData","slottedPaginationBar","dataTruncationTooltip","dataTruncationSeeMoreSeeLess","textWrap","tableSizingAndColumnWidth","devArea"]},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/object-assign/index.js");var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);