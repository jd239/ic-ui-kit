/*! For license information please see stories-ic-select_(multi)-stories-mdx.0bf603b8.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_ukic_canary_react=self.webpackChunk_ukic_canary_react||[]).push([[2287],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Hl:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Hl,W8:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.W8,gG:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.gG});__webpack_require__("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var _storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs")},"./src/stories/ic-select_(multi).stories.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LoadingWithError:()=>ic_select_multi_stories_LoadingWithError,__namedExportsOrder:()=>__namedExportsOrder,default:()=>ic_select_multi_stories,defaultArgs:()=>defaultArgs,defaultStory:()=>defaultStory,defaultValue:()=>defaultValue,disabled:()=>disabled,disabledOptions:()=>disabledOptions,groups:()=>groups,helperText:()=>helperText,hiddenLabel:()=>hiddenLabel,loadingWithError:()=>loadingWithError,playgroundExample:()=>playgroundExample,playgroundOptions:()=>playgroundOptions,readOnly:()=>readOnly,recommended:()=>recommended,required:()=>required,sizes:()=>sizes,validation:()=>validation,withClearButton:()=>withClearButton,withDescriptions:()=>withDescriptions});var react=__webpack_require__("./node_modules/react/index.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/addon-docs/dist/index.mjs"),components=__webpack_require__("../react/dist/components.js"),src_components=__webpack_require__("./src/components.ts");const readme_namespaceObject='# ic-select\n\n\n\n\x3c!-- Auto Generated Below --\x3e\n\n\n## Properties\n\n| Property                      | Attribute                        | Description                                                                                                                                                                                                                                                                | Type                                      | Default              |\n| ----------------------------- | -------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------- | -------------------- |\n| `charactersUntilSuggestions`  | `characters-until-suggestions`   | **[DEPRECATED]** This prop should not be used anymore.                                                                                                                                                                                                                     | `number`                                  | `0`                  |\n| `debounce`                    | `debounce`                       | The amount of time, in milliseconds, to wait to trigger the `icChange` event after each keystroke.                                                                                                                                                                         | `number`                                  | `0`                  |\n| `disableFilter`               | `disable-filter`                 | If `true`, the built in filtering will be disabled for a searchable variant. For example, if options will already be filtered from external source.                                                                                                                        | `boolean`                                 | `false`              |\n| `disabled`                    | `disabled`                       | If `true`, the disabled state will be set.                                                                                                                                                                                                                                 | `boolean`                                 | `false`              |\n| `emptyOptionListText`         | `empty-option-list-text`         | The text displayed when there are no options in the option list.                                                                                                                                                                                                           | `string`                                  | `"No results found"` |\n| `form`                        | `form`                           | The <form> element to associate the select with.                                                                                                                                                                                                                           | `string`                                  | `undefined`          |\n| `formaction`                  | `formaction`                     | The URL that processes the information submitted by the select. It overrides the action attribute of the select\'s form owner. Does nothing if there is no form owner. This prop should only be used with searchable select and will only be applied if searchable is true. | `string`                                  | `undefined`          |\n| `formenctype`                 | `formenctype`                    | The way the submitted form data is encoded. This prop should only be used with searchable select and will only be applied if searchable is true.                                                                                                                           | `string`                                  | `undefined`          |\n| `formmethod`                  | `formmethod`                     | The HTTP method used to submit the form. This prop should only be used with searchable select and will only be applied if searchable is true.                                                                                                                              | `string`                                  | `undefined`          |\n| `formnovalidate`              | `formnovalidate`                 | If `true`, the form will not be validated when submitted. This prop should only be used with searchable select and will only be applied if searchable is true.                                                                                                             | `boolean`                                 | `undefined`          |\n| `formtarget`                  | `formtarget`                     | The place to display the response from submitting the form. It overrides the target attribute of the select\'s form owner. This prop should only be used with searchable select and will only be applied if searchable is true.                                             | `string`                                  | `undefined`          |\n| `fullWidth`                   | `full-width`                     | If `true`, the select element will fill the width of the container. This prop should only be used with searchable select and will only be applied if searchable is true.                                                                                                   | `boolean`                                 | `false`              |\n| `helperText`                  | `helper-text`                    | The helper text that will be displayed for additional field guidance.                                                                                                                                                                                                      | `string`                                  | `""`                 |\n| `hideLabel`                   | `hide-label`                     | If `true`, the label will be hidden and the required label value will be applied as an aria-label.                                                                                                                                                                         | `boolean`                                 | `false`              |\n| `includeDescriptionsInSearch` | `include-descriptions-in-search` | If `true`, descriptions of options will be included when filtering options in a searchable select. Only applies to built in filtering.                                                                                                                                     | `boolean`                                 | `false`              |\n| `includeGroupTitlesInSearch`  | `include-group-titles-in-search` | If `true`, group titles of grouped options will be included when filtering options in a searchable select. Only applies to built in filtering.                                                                                                                             | `boolean`                                 | `false`              |\n| `label` _(required)_          | `label`                          | The label for the select.                                                                                                                                                                                                                                                  | `string`                                  | `undefined`          |\n| `loading`                     | `loading`                        | If `true`, the loading state will be triggered when fetching options asynchronously.                                                                                                                                                                                       | `boolean`                                 | `false`              |\n| `loadingErrorLabel`           | `loading-error-label`            | The message displayed when external loading times out.                                                                                                                                                                                                                     | `string`                                  | `"Loading Error"`    |\n| `loadingLabel`                | `loading-label`                  | The message displayed whilst the options are being loaded externally.                                                                                                                                                                                                      | `string`                                  | `"Loading..."`       |\n| `multiple`                    | `multiple`                       | If `true`, multiple options can be selected.                                                                                                                                                                                                                               | `boolean`                                 | `false`              |\n| `name`                        | `name`                           | The name of the control, which is submitted with the form data.                                                                                                                                                                                                            | `string`                                  | `this.inputId`       |\n| `options`                     | --                               | The possible selection options.                                                                                                                                                                                                                                            | `IcMenuOption[]`                          | `[]`                 |\n| `placeholder`                 | `placeholder`                    | The placeholder value to be displayed.                                                                                                                                                                                                                                     | `string`                                  | `"Select an option"` |\n| `readonly`                    | `readonly`                       | If `true`, the readonly state will be set.                                                                                                                                                                                                                                 | `boolean`                                 | `false`              |\n| `required`                    | `required`                       | If `true`, the select will require a value.                                                                                                                                                                                                                                | `boolean`                                 | `false`              |\n| `searchMatchPosition`         | `search-match-position`          | Whether the search string of the searchable select should match the start of or anywhere in the options. Only applies to built in filtering.                                                                                                                               | `"anywhere" \\| "start"`                   | `"anywhere"`         |\n| `searchable`                  | `searchable`                     | If `true`, a searchable variant of the select will be displayed which can be typed in to filter options.                                                                                                                                                                   | `boolean`                                 | `false`              |\n| `selectOnEnter`               | `select-on-enter`                | If `true`, the icOptionSelect event will be fired on enter instead of ArrowUp and ArrowDown.                                                                                                                                                                               | `boolean`                                 | `false`              |\n| `showClearButton`             | `show-clear-button`              | If `true`, a button which clears the select input when clicked will be displayed. The button will always appear on the searchable select.                                                                                                                                  | `boolean`                                 | `false`              |\n| `size`                        | `size`                           | The size of the select.                                                                                                                                                                                                                                                    | `"default" \\| "large" \\| "small"`         | `"default"`          |\n| `small`                       | `small`                          | **[DEPRECATED]** This prop should not be used anymore. Set prop `size` to "small" instead.                                                                                                                                                                                 | `boolean`                                 | `false`              |\n| `timeout`                     | `timeout`                        | If using external filtering, set a timeout for when loading takes too long.                                                                                                                                                                                                | `number`                                  | `undefined`          |\n| `validationStatus`            | `validation-status`              | The validation status - e.g. \'error\' \\| \'warning\' \\| \'success\'.                                                                                                                                                                                                            | `"" \\| "error" \\| "success" \\| "warning"` | `""`                 |\n| `validationText`              | `validation-text`                | The text to display as the validation message.                                                                                                                                                                                                                             | `string`                                  | `""`                 |\n| `value`                       | `value`                          | The value of the select, reflected by the value of the currently selected option. For the searchable variant, the value is also reflected by the user input. For the multi-select variant, the value must be an array of option values.                                    | `string \\| string[]`                      | `undefined`          |\n\n\n## Events\n\n| Event              | Description                                                                                                                        | Type                                     |\n| ------------------ | ---------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------- |\n| `icBlur`           | Emitted when the select loses focus.                                                                                               | `CustomEvent<void>`                      |\n| `icChange`         | Emitted when the value changes.                                                                                                    | `CustomEvent<IcValueEventDetail>`        |\n| `icClear`          | Emitted when the clear button is clicked.                                                                                          | `CustomEvent<void>`                      |\n| `icFocus`          | Emitted when the select gains focus.                                                                                               | `CustomEvent<void>`                      |\n| `icInput`          | Emitted when a keyboard input occurred.                                                                                            | `CustomEvent<IcValueEventDetail>`        |\n| `icOptionDeselect` | Emitted when `multiple` is `true` and an option is deselected.                                                                     | `CustomEvent<IcOptionSelectEventDetail>` |\n| `icOptionSelect`   | Emitted when an option is selected. Selecting an option will also trigger an `icChange/onIcChange` due to the value being updated. | `CustomEvent<IcOptionSelectEventDetail>` |\n| `icRetryLoad`      | Emitted when the \'retry loading\' button is clicked for a searchable variant.                                                       | `CustomEvent<IcValueEventDetail>`        |\n\n\n## Methods\n\n### `setFocus() => Promise<void>`\n\nSets focus on the input box.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## CSS Custom Properties\n\n| Name                | Description                |\n| ------------------- | -------------------------- |\n| `--ic-z-index-menu` | z-index of select menu     |\n| `--input-width`     | Width of the input field   |\n| `--menu-width`      | Width of the dropdown menu |\n\n\n## Dependencies\n\n### Depends on\n\n- ic-input-container\n- ic-input-label\n- ic-input-component-container\n- ic-typography\n- ic-button\n- [ic-menu-with-multi](../ic-menu-with-multi)\n- ic-input-validation\n\n### Graph\n```mermaid\ngraph TD;\n  ic-select-with-multi --\x3e ic-input-container\n  ic-select-with-multi --\x3e ic-input-label\n  ic-select-with-multi --\x3e ic-input-component-container\n  ic-select-with-multi --\x3e ic-typography\n  ic-select-with-multi --\x3e ic-button\n  ic-select-with-multi --\x3e ic-menu-with-multi\n  ic-select-with-multi --\x3e ic-input-validation\n  ic-input-label --\x3e ic-typography\n  ic-button --\x3e ic-loading-indicator\n  ic-button --\x3e ic-tooltip\n  ic-loading-indicator --\x3e ic-typography\n  ic-tooltip --\x3e ic-typography\n  ic-menu-with-multi --\x3e ic-loading-indicator\n  ic-menu-with-multi --\x3e ic-typography\n  ic-menu-with-multi --\x3e ic-button\n  ic-input-validation --\x3e ic-typography\n  style ic-select-with-multi fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n\n',OPTIONS=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame"},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla"},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],OPTIONS_WITH_DESCRIPTIONS=[{label:"Cappuccino",value:"Cap",description:"Coffee frothed up with pressurised steam"},{label:"Latte",value:"Lat",description:"A milkier coffee than a cappuccino"},{label:"Americano",value:"Ame",description:"Espresso coffee diluted with hot water"},{label:"Filter",value:"Fil",description:"Coffee filtered using paper or a mesh"},{label:"Flat white",value:"Fla",description:"Coffee without froth made with espresso and hot steamed milk"},{label:"Mocha",value:"Moc",description:"A mixture of coffee and chocolate"},{label:"Macchiato",value:"Mac",description:"Espresso coffee with a dash of frothy steamed milk"}],OPTIONS_WITH_DISABLED=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat",disabled:!0},{label:"Americano",value:"Ame"},{label:"Filter",value:"Fil",disabled:!0},{label:"Flat white",value:"Fla",disabled:!0},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}],GROUPED_OPTIONS=[{label:"Fancy",children:[{label:"Cappuccino",value:"Cap"},{label:"Flat white",value:"Flat"}]},{label:"Boring",children:[{label:"Filter",value:"Fil"},{label:"Latte",value:"Lat"}]}],OPTIONS_WITH_RECOMMENDED=[{label:"Cappuccino",value:"Cap"},{label:"Latte",value:"Lat"},{label:"Americano",value:"Ame",recommended:!0},{label:"Filter",value:"Fil"},{label:"Flat white",value:"Fla",recommended:!0},{label:"Mocha",value:"Moc"},{label:"Macchiato",value:"Mac"}];var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ic_select_multi_stories_LoadingWithError=()=>{const selectEl=(0,react.useRef)();return(0,jsx_runtime.jsx)(src_components.gs,{ref:selectEl,label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,loading:!0,timeout:"1000",onIcChange:event=>console.log(`icChange: ${event.detail.value}`),onIcRetryLoad:event=>selectEl.current.loading=!0})},playgroundOptions=[{label:"Cappuccino",value:"Cap",description:"Coffee frothed up with pressurised steam"},{label:"Boring",children:[{label:"Latte",value:"Lat",description:"A milkier coffee than a cappuccino"},{label:"Filter",value:"Fil",description:"Coffee filtered using paper or a mesh"}]},{label:"Fancy",children:[{label:"Flat white",value:"Fla",description:"Coffee without froth made with espresso and hot steamed milk"},{label:"Macchiato",value:"Mac",description:"Espresso coffee with a dash of frothy steamed milk"}]},{label:"Americano",value:"Ame",description:"Espresso coffee diluted with hot water"},{label:"Mocha",value:"Moc",description:"A mixture of coffee and chocolate"}],defaultArgs={disabled:!1,fullWidth:!1,helperText:"Select some options from the list",hideLabel:!1,loading:!1,loadingLabel:"Loading...",label:"What is your favourite coffee?",placeholder:"Select an option",readonly:!1,required:!1,size:"default",validationStatus:"",validationText:"",showClearButton:!1};function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",ul:"ul",li:"li",code:"code",h3:"h3",h4:"h4",pre:"pre",a:"a",div:"div"},(0,lib.RP)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{title:"React Components/Multi-Select",component:src_components.gs,parameters:{componentAPI:{data:readme_namespaceObject}}}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"canary-multi-select",children:"[Canary]: Multi-Select"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Use the multi-select component to allow users to select one or more values from a list of options."}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"There is one required prop for the multi-select:"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsxs)(_components.li,{children:["label: ",(0,jsx_runtime.jsx)(_components.code,{children:"string"})]}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Click the 'Component API' tab to view all the available props, events and slots for the multi-select."}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["To use the multi-select component, import ",(0,jsx_runtime.jsx)(_components.code,{children:"@ukic/canary-react"})," into your application."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["The component tag name for the multi-select is ",(0,jsx_runtime.jsx)(_components.code,{children:"IcSelectWithMulti"}),".\nEven though it is a variant of the ",(0,jsx_runtime.jsx)(_components.code,{children:"IcSelect"})," component (which includes the single and searchable selects), this different tag name is necessary because of the need to keep the multi-select functionality separate while it is experimental (in a canary release).\nNote that the ",(0,jsx_runtime.jsx)(_components.code,{children:"multiple"})," prop still needs to be applied in order to enable the multi-select functionality."]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default",children:"Default"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"An example of a default multi-select (with no additional functionality)."}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default",children:(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`),onIcOptionSelect:event=>console.log(`icOptionSelect: ${event.detail.value}`),onIcOptionDeselect:event=>console.log(`icOptionDeselect: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"default-code-example",children:"Default code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n    onIcOptionSelect={(event) =>\n      console.log(`icOptionSelect: ${event.detail.value}`)\n    }\n    onIcOptionDeselect={(event) =>\n      console.log(`icOptionDeselect: ${event.detail.value}`)\n    }\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"default-value",children:"Default value"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Show options as pre-selected by setting the ",(0,jsx_runtime.jsx)(_components.code,{children:"value"})," prop to an array containing the values of these options."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Default Value",children:(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,value:["Ame","Fil","Moc"],onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"default-value-code-example",children:"Default value code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    value={["Ame", "Fil", "Moc"]}\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-clear-button",children:"With clear button"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Display a clear button by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"showClearButton"})," prop.\nThis will appear when the user has selected some options and allow them to easily clear their selection."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"With Clear Button",children:(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,showClearButton:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"with-clear-button-code-example",children:"With clear button code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    showClearButton\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"with-descriptions",children:"With descriptions"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Display extra information about the options by providing a description using the ",(0,jsx_runtime.jsx)(_components.code,{children:"description"})," property for each option."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"With Descriptions",children:(0,jsx_runtime.jsx)("div",{style:{height:"470px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS_WITH_DESCRIPTIONS,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"with-descriptions-code-example",children:"With descriptions code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  {\n    label: "Cappuccino",\n    value: "Cap",\n    description: "Coffee frothed up with pressurised steam",\n  },\n  {\n    label: "Latte",\n    value: "Lat",\n    description: "A milkier coffee than a cappuccino",\n  },\n  {\n    label: "Americano",\n    value: "Ame",\n    description: "Espresso coffee diluted with hot water",\n  },\n  {\n    label: "Filter",\n    value: "Fil",\n    description: "Coffee filtered using paper or a mesh",\n  },\n  {\n    label: "Flat white",\n    value: "Fla",\n    description: "Coffee without froth made with espresso and hot steamed milk",\n  },\n  {\n    label: "Mocha",\n    value: "Moc",\n    description: "A mixture of coffee and chocolate",\n  },\n  {\n    label: "Macchiato",\n    value: "Mac",\n    description: "Espresso coffee with a dash of frothy steamed milk",\n  },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"helper-text",children:"Helper text"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Display helper text to provide additional information by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"helperText"})," prop."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Helper Text",children:(0,jsx_runtime.jsx)("div",{style:{height:"450px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,helperText:"Select some options from the list",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"helper-text-code-example",children:"Helper text code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    helperText="Select some options from the list"\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"sizes",children:"Sizes"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Set the size of the multi-select by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"size"})," prop. This prop takes the values ",(0,jsx_runtime.jsx)(_components.code,{children:"small"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"default"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"large"}),".\nDepending on the chosen size, the prop will apply styling to increase or decrease the amount of spacing within the component.\nThe ",(0,jsx_runtime.jsx)(_components.code,{children:"default"})," variant is seen in the first ",(0,jsx_runtime.jsx)(_components.a,{href:"#default",children:"default"})," example."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Sizes",children:(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px",height:"650px"},children:[(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,size:"small",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)}),(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)}),(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,size:"large",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"sizes-code-example",children:"Sizes code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelects = () => (\n  <div style={{ display: "flex", flexDirection: "column", gap: "16px" }}>\n    <IcSelectWithMulti\n      label="What are your favourite types of coffee?"\n      options={options}\n      multiple\n      size="small"\n      onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n    />\n    <IcSelectWithMulti\n      label="What are your favourite types of coffee?"\n      options={options}\n      multiple\n      onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n    />\n    <IcSelectWithMulti\n      label="What are your favourite types of coffee?"\n      options={options}\n      multiple\n      size="large"\n      onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n    />\n  </div>\n);\n\nexport default MultiSelects;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled",children:"Disabled"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Disable the multi-select and prevent user interaction by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"disabled"})," prop."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Disabled",children:(0,jsx_runtime.jsx)("div",{style:{height:"200px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,disabled:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"disabled-code-example",children:"Disabled code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    disabled\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"disabled-options",children:"Disabled options"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Disable certain options by setting the ",(0,jsx_runtime.jsx)(_components.code,{children:"disabled"})," property to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})," for each option."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Disabled Options",children:(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS_WITH_DISABLED,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"disabled-options-code-example",children:"Disabled options code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat", disabled: true },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil", disabled: true },\n  { label: "Flat white", value: "Fla", disabled: true },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    disabled\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"hidden-label",children:"Hidden label"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Hide the visible label for the multi-select by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"hideLabel"})," prop."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Hidden label",children:(0,jsx_runtime.jsx)("div",{style:{height:"400px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,hideLabel:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"hidden-label-code-example",children:"Hidden label code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    hideLabel\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"required",children:"Required"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Inform the user that the multi-select is a required field by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"required"})," prop.\nThis will display an asterisk next to the label and apply the ",(0,jsx_runtime.jsx)(_components.code,{children:"aria-required"})," attribute."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Required",children:(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,required:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"required-code-example",children:"Required code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    required\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"read-only",children:"Read-only"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Make the multi-select read-only by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"readonly"})," prop.\nUse the ",(0,jsx_runtime.jsx)(_components.code,{children:"value"})," prop to set which options are selected and will be displayed when it is read-only."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Read-only",children:(0,jsx_runtime.jsx)("div",{style:{height:"200px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,readonly:!0,value:["Cap","Fla","Moc"],onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"read-only-code-example",children:"Read-only code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    readonly\n    value={["Cap", "Fla", "Moc"]}\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"groups",children:"Groups"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Display options in groups by passing an array of child options to the ",(0,jsx_runtime.jsx)(_components.code,{children:"children"})," property of a parent option.\nThe parent option will be rendered as the title of the group."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Groups",children:(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:GROUPED_OPTIONS,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"groups-code-example",children:"Groups code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  {\n    label: "Fancy",\n    children: [\n      { label: "Cappuccino", value: "Cap" },\n      { label: "Flat white", value: "Flat" },\n    ],\n  },\n  {\n    label: "Boring",\n    children: [\n      { label: "Filter", value: "Fil" },\n      { label: "Latte", value: "Lat" },\n    ],\n  },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"recommended",children:"Recommended"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Display certain options at the top of the option list by setting the ",(0,jsx_runtime.jsx)(_components.code,{children:"recommended"})," property to ",(0,jsx_runtime.jsx)(_components.code,{children:"true"})," on each option.\nThis will allow for quick access to these options."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Recommended",children:(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS_WITH_RECOMMENDED,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"recommended-code-example",children:"Recommended code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame", recommended: true },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla", recommended: true },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n  />\n);\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"validation",children:"Validation"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Display a validation status and message by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"validationStatus"})," and ",(0,jsx_runtime.jsx)(_components.code,{children:"validationMessage"})," props.\nThe ",(0,jsx_runtime.jsx)(_components.code,{children:"validationStatus"})," prop takes the values ",(0,jsx_runtime.jsx)(_components.code,{children:"success"}),", ",(0,jsx_runtime.jsx)(_components.code,{children:"warning"})," or ",(0,jsx_runtime.jsx)(_components.code,{children:"error"}),"."]}),"\n",(0,jsx_runtime.jsx)(dist.Hl,{children:(0,jsx_runtime.jsx)(dist.gG,{name:"Validation",children:(0,jsx_runtime.jsxs)("div",{style:{height:"640px"},children:[(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,validationStatus:"success",validationText:"Coffee available",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)}),(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,validationStatus:"warning",validationText:"Only a few left",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)}),(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,validationStatus:"error",validationText:"Coffee unavailable",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})]})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"validation-code-example",children:"Validation code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelects = () => (\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    validationStatus="success"\n    validationText="Coffee available"\n    onIcChange={(event) =>\n      console.log(`icChange: ${event.detail.value}`)\n    }\n  />\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    validationStatus="warning"\n    validationText="Only a few left"\n    onIcChange={(event) =>\n      console.log(`icChange: ${event.detail.value}`)\n    }\n  />\n  <IcSelectWithMulti\n    label="What are your favourite types of coffee?"\n    options={options}\n    multiple\n    validationStatus="error"\n    validationText="Coffee unavailable"\n    onIcChange={(event) =>\n      console.log(`icChange: ${event.detail.value}`)\n    }\n  />\n);\n\nexport default MultiSelects;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"loading-with-error",children:"Loading with error"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Display the loading state by using the ",(0,jsx_runtime.jsx)(_components.code,{children:"loading"})," prop.\nThe multi-select will show a loading error after the amount of time specified using the ",(0,jsx_runtime.jsx)(_components.code,{children:"timeout"})," prop has elapsed."]}),"\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Loading With Error",children:(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(ic_select_multi_stories_LoadingWithError,{})})})}),"\n",(0,jsx_runtime.jsx)(_components.h4,{id:"loading-with-error-code-example",children:"Loading with error code example"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-jsx",children:'import * as React from "react";\nimport { IcMenuOption } from "@ukic/web-components";\nimport { IcSelectWithMulti } from "@ukic/canary-react";\n\nconst options: IcMenuOption[] = [\n  { label: "Cappuccino", value: "Cap" },\n  { label: "Latte", value: "Lat" },\n  { label: "Americano", value: "Ame" },\n  { label: "Filter", value: "Fil" },\n  { label: "Flat white", value: "Fla" },\n  { label: "Mocha", value: "Moc" },\n  { label: "Macchiato", value: "Mac" },\n];\n\nconst MultiSelect = () => {\n  const selectEl = useRef();\n\n  return (\n    <IcSelectWithMulti\n      ref={selectEl}\n      label="What are your favourite types of coffee?"\n      options={options}\n      loading\n      timeout="1000"\n      onIcChange={(event) => console.log(`icChange: ${event.detail.value}`)}\n      onIcRetryLoad={(event) => (selectEl.current.loading = true)}\n    />\n  );\n};\n\nexport default MultiSelect;\n'})}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"playground-example",children:"Playground Example"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Go to the ",(0,jsx_runtime.jsx)(components.D9,{href:"/?path=/story/react-components-multi-select--playground-example",children:"separate page for the playground example"})," to view the prop controls."]}),"\n","\n","\n",(0,jsx_runtime.jsx)(dist.Hl,{withSource:"none",children:(0,jsx_runtime.jsx)(dist.gG,{name:"Playground Example",args:defaultArgs,argTypes:{size:{options:["default","large","small"],control:{type:"inline-radio"}},validationStatus:{defaultValue:"",options:["","error","success","warning"],control:{type:"select"}}},children:args=>(0,jsx_runtime.jsx)(_components.div,{style:{height:"500px"},children:(0,jsx_runtime.jsx)(src_components.gs,{multiple:!0,options:playgroundOptions,disabled:args.disabled,fullWidth:args.fullWidth,helperText:args.helperText,hideLabel:args.hideLabel,loading:args.loading,loadingLabel:args.loadingLabel,label:args.label,placeholder:args.placeholder,readonly:args.readonly,required:args.required,size:args.size,validationStatus:args.validationStatus,validationText:args.validationText,showClearButton:args.showClearButton})})})})]})}const defaultStory=()=>(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`),onIcOptionSelect:event=>console.log(`icOptionSelect: ${event.detail.value}`),onIcOptionDeselect:event=>console.log(`icOptionDeselect: ${event.detail.value}`)})});defaultStory.storyName="Default",defaultStory.parameters={storySource:{source:'<div style={{\n  height: "430px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} onIcOptionSelect={event => console.log(`icOptionSelect: ${event.detail.value}`)} onIcOptionDeselect={event => console.log(`icOptionDeselect: ${event.detail.value}`)} /></div>'}};const defaultValue=()=>(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,value:["Ame","Fil","Moc"],onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});defaultValue.storyName="Default Value",defaultValue.parameters={storySource:{source:'<div style={{\n  height: "430px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple value={["Ame", "Fil", "Moc"]} onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const withClearButton=()=>(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,showClearButton:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});withClearButton.storyName="With Clear Button",withClearButton.parameters={storySource:{source:'<div style={{\n  height: "430px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple showClearButton onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const withDescriptions=()=>(0,jsx_runtime.jsx)("div",{style:{height:"470px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS_WITH_DESCRIPTIONS,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});withDescriptions.storyName="With Descriptions",withDescriptions.parameters={storySource:{source:'<div style={{\n  height: "470px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS_WITH_DESCRIPTIONS} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const helperText=()=>(0,jsx_runtime.jsx)("div",{style:{height:"450px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,helperText:"Select some options from the list",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});helperText.storyName="Helper Text",helperText.parameters={storySource:{source:'<div style={{\n  height: "450px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple helperText="Select some options from the list" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const sizes=()=>(0,jsx_runtime.jsxs)("div",{style:{display:"flex",flexDirection:"column",gap:"16px",height:"650px"},children:[(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,size:"small",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)}),(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)}),(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,size:"large",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})]});sizes.storyName="Sizes",sizes.parameters={storySource:{source:'<div style={{\n  display: "flex",\n  flexDirection: "column",\n  gap: "16px",\n  height: "650px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple size="small" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple size="large" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const disabled=()=>(0,jsx_runtime.jsx)("div",{style:{height:"200px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,disabled:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});disabled.storyName="Disabled",disabled.parameters={storySource:{source:'<div style={{\n  height: "200px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple disabled onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const disabledOptions=()=>(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS_WITH_DISABLED,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});disabledOptions.storyName="Disabled Options",disabledOptions.parameters={storySource:{source:'<div style={{\n  height: "430px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS_WITH_DISABLED} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const hiddenLabel=()=>(0,jsx_runtime.jsx)("div",{style:{height:"400px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,hideLabel:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});hiddenLabel.storyName="Hidden label",hiddenLabel.parameters={storySource:{source:'<div style={{\n  height: "400px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple hideLabel onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const required=()=>(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,required:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});required.storyName="Required",required.parameters={storySource:{source:'<div style={{\n  height: "430px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple required onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const readOnly=()=>(0,jsx_runtime.jsx)("div",{style:{height:"200px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,readonly:!0,value:["Cap","Fla","Moc"],onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});readOnly.storyName="Read-only",readOnly.parameters={storySource:{source:'<div style={{\n  height: "200px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple readonly value={["Cap", "Fla", "Moc"]} onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const groups=()=>(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:GROUPED_OPTIONS,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});groups.storyName="Groups",groups.parameters={storySource:{source:'<div style={{\n  height: "430px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={GROUPED_OPTIONS} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const recommended=()=>(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS_WITH_RECOMMENDED,multiple:!0,onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})});recommended.storyName="Recommended",recommended.parameters={storySource:{source:'<div style={{\n  height: "430px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS_WITH_RECOMMENDED} multiple onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const validation=()=>(0,jsx_runtime.jsxs)("div",{style:{height:"640px"},children:[(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,validationStatus:"success",validationText:"Coffee available",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)}),(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,validationStatus:"warning",validationText:"Only a few left",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)}),(0,jsx_runtime.jsx)(src_components.gs,{label:"What are your favourite types of coffee?",options:OPTIONS,multiple:!0,validationStatus:"error",validationText:"Coffee unavailable",onIcChange:event=>console.log(`icChange: ${event.detail.value}`)})]});validation.storyName="Validation",validation.parameters={storySource:{source:'<div style={{\n  height: "640px"\n}}><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple validationStatus="success" validationText="Coffee available" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple validationStatus="warning" validationText="Only a few left" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /><IcSelectWithMulti label="What are your favourite types of coffee?" options={OPTIONS} multiple validationStatus="error" validationText="Coffee unavailable" onIcChange={event => console.log(`icChange: ${event.detail.value}`)} /></div>'}};const loadingWithError=()=>(0,jsx_runtime.jsx)("div",{style:{height:"430px"},children:(0,jsx_runtime.jsx)(ic_select_multi_stories_LoadingWithError,{})});loadingWithError.storyName="Loading With Error",loadingWithError.parameters={storySource:{source:'<div style={{\n  height: "430px"\n}}><LoadingWithError /></div>'}};const playgroundExample=args=>(0,jsx_runtime.jsx)("div",{style:{height:"500px"},children:(0,jsx_runtime.jsx)(src_components.gs,{multiple:!0,options:playgroundOptions,disabled:args.disabled,fullWidth:args.fullWidth,helperText:args.helperText,hideLabel:args.hideLabel,loading:args.loading,loadingLabel:args.loadingLabel,label:args.label,placeholder:args.placeholder,readonly:args.readonly,required:args.required,size:args.size,validationStatus:args.validationStatus,validationText:args.validationText,showClearButton:args.showClearButton})});playgroundExample.storyName="Playground Example",playgroundExample.argTypes={size:{options:["default","large","small"],control:{type:"inline-radio"}},validationStatus:{defaultValue:"",options:["","error","success","warning"],control:{type:"select"}}},playgroundExample.args=defaultArgs,playgroundExample.parameters={storySource:{source:'args => <div style={{\n  height: "500px"\n}}>\n        <IcSelectWithMulti multiple options={playgroundOptions} disabled={args.disabled} fullWidth={args.fullWidth} helperText={args.helperText} hideLabel={args.hideLabel} loading={args.loading} loadingLabel={args.loadingLabel} label={args.label} placeholder={args.placeholder} readonly={args.readonly} required={args.required} size={args.size} validationStatus={args.validationStatus} validationText={args.validationText} showClearButton={args.showClearButton} />\n      </div>'}};const componentMeta={title:"React Components/Multi-Select",parameters:{componentAPI:{data:readme_namespaceObject}},component:src_components.gs,tags:["stories-mdx"],includeStories:["defaultStory","defaultValue","withClearButton","withDescriptions","helperText","sizes","disabled","disabledOptions","hiddenLabel","required","readOnly","groups","recommended","validation","loadingWithError","playgroundExample"]};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs={...componentMeta.parameters.docs||{},page:function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.RP)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}};const ic_select_multi_stories=componentMeta,__namedExportsOrder=["LoadingWithError","playgroundOptions","defaultArgs","defaultStory","defaultValue","withClearButton","withDescriptions","helperText","sizes","disabled","disabledOptions","hiddenLabel","required","readOnly","groups","recommended","validation","loadingWithError","playgroundExample"]},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),g=60103;if(exports.Fragment=60107,"function"==typeof Symbol&&Symbol.for){var h=Symbol.for;g=h("react.element"),exports.Fragment=h("react.fragment")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,k){var b,d={},e=null,l=null;for(b in void 0!==k&&(e=""+k),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(l=a.ref),a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"../react/node_modules/object-assign/index.js":module=>{var getOwnPropertySymbols=Object.getOwnPropertySymbols,hasOwnProperty=Object.prototype.hasOwnProperty,propIsEnumerable=Object.prototype.propertyIsEnumerable;module.exports=function shouldUseNative(){try{if(!Object.assign)return!1;var test1=new String("abc");if(test1[5]="de","5"===Object.getOwnPropertyNames(test1)[0])return!1;for(var test2={},i=0;i<10;i++)test2["_"+String.fromCharCode(i)]=i;if("0123456789"!==Object.getOwnPropertyNames(test2).map((function(n){return test2[n]})).join(""))return!1;var test3={};return"abcdefghijklmnopqrst".split("").forEach((function(letter){test3[letter]=letter})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},test3)).join("")}catch(err){return!1}}()?Object.assign:function(target,source){for(var from,symbols,to=function toObject(val){if(null==val)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(val)}(target),s=1;s<arguments.length;s++){for(var key in from=Object(arguments[s]))hasOwnProperty.call(from,key)&&(to[key]=from[key]);if(getOwnPropertySymbols){symbols=getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++)propIsEnumerable.call(from,symbols[i])&&(to[symbols[i]]=from[symbols[i]])}}return to}},"../react/node_modules/react/cjs/react.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var l=__webpack_require__("../react/node_modules/object-assign/index.js"),n="function"==typeof Symbol&&Symbol.for,p=n?Symbol.for("react.element"):60103,q=n?Symbol.for("react.portal"):60106,r=n?Symbol.for("react.fragment"):60107,t=n?Symbol.for("react.strict_mode"):60108,u=n?Symbol.for("react.profiler"):60114,v=n?Symbol.for("react.provider"):60109,w=n?Symbol.for("react.context"):60110,x=n?Symbol.for("react.forward_ref"):60112,y=n?Symbol.for("react.suspense"):60113,z=n?Symbol.for("react.memo"):60115,A=n?Symbol.for("react.lazy"):60116,B="function"==typeof Symbol&&Symbol.iterator;function C(a){for(var b="https://reactjs.org/docs/error-decoder.html?invariant="+a,c=1;c<arguments.length;c++)b+="&args[]="+encodeURIComponent(arguments[c]);return"Minified React error #"+a+"; visit "+b+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a,this.context=b,this.refs=E,this.updater=c||D}function G(){}function H(a,b,c){this.props=a,this.context=b,this.refs=E,this.updater=c||D}F.prototype.isReactComponent={},F.prototype.setState=function(a,b){if("object"!=typeof a&&"function"!=typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,"setState")},F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,"forceUpdate")},G.prototype=F.prototype;var I=H.prototype=new G;I.constructor=H,l(I,F.prototype),I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};function M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=""+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}function O(a){return"object"==typeof a&&null!==a&&a.$$typeof===p}var P=/\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();return d.result=a,d.keyPrefix=b,d.func=c,d.context=e,d.count=0,d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}function S(a){a.result=null,a.keyPrefix=null,a.func=null,a.context=null,a.count=0,10>Q.length&&Q.push(a)}function T(a,b,c,e){var d=typeof a;"undefined"!==d&&"boolean"!==d||(a=null);var g=!1;if(null===a)g=!0;else switch(d){case"string":case"number":g=!0;break;case"object":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,""===b?"."+U(a,0):b),1;if(g=0,b=""===b?".":b+":",Array.isArray(a))for(var k=0;k<a.length;k++){var f=b+U(d=a[k],k);g+=T(d,f,c,e)}else if(null===a||"object"!=typeof a?f=null:f="function"==typeof(f=B&&a[B]||a["@@iterator"])?f:null,"function"==typeof f)for(a=f.call(a),k=0;!(d=a.next()).done;)g+=T(d=d.value,f=b+U(d,k++),c,e);else if("object"===d)throw c=""+a,Error(C(31,"[object Object]"===c?"object with keys {"+Object.keys(a).join(", ")+"}":c,""));return g}function V(a,b,c){return null==a?0:T(a,"",b,c)}function U(a,b){return"object"==typeof a&&null!==a&&null!=a.key?function escape(a){var b={"=":"=0",":":"=2"};return"$"+(""+a).replace(/[=:]/g,(function(a){return b[a]}))}(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}function aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++),Array.isArray(a)?X(a,e,c,(function(a){return a})):null!=a&&(O(a)&&(a=function N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}(a,d+(!a.key||b&&b.key===a.key?"":(""+a.key).replace(P,"$&/")+"/")+c)),e.push(a))}function X(a,b,c,e,d){var g="";null!=c&&(g=(""+c).replace(P,"$&/")+"/"),V(a,aa,b=R(b,g,e,d)),S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}var ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];return X(a,e,null,b,c),e},forEach:function(a,b,c){if(null==a)return a;V(a,W,b=R(null,null,b,c)),S(b)},count:function(a){return V(a,(function(){return null}),null)},toArray:function(a){var b=[];return X(a,b,null,(function(a){return a})),b},only:function(a){if(!O(a))throw Error(C(143));return a}},exports.Component=F,exports.Fragment=r,exports.Profiler=u,exports.PureComponent=H,exports.StrictMode=t,exports.Suspense=y,exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba,exports.cloneElement=function(a,b,c){if(null==a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){if(void 0!==b.ref&&(g=b.ref,k=J.current),void 0!==b.key&&(d=""+b.key),a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,key:d,ref:g,props:e,_owner:k}},exports.createContext=function(a,b){return void 0===b&&(b=null),(a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:v,_context:a},a.Consumer=a},exports.createElement=M,exports.createFactory=function(a){var b=M.bind(null,a);return b.type=a,b},exports.createRef=function(){return{current:null}},exports.forwardRef=function(a){return{$$typeof:x,render:a}},exports.isValidElement=O,exports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}},exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}},exports.useCallback=function(a,b){return Z().useCallback(a,b)},exports.useContext=function(a,b){return Z().useContext(a,b)},exports.useDebugValue=function(){},exports.useEffect=function(a,b){return Z().useEffect(a,b)},exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)},exports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)},exports.useMemo=function(a,b){return Z().useMemo(a,b)},exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)},exports.useRef=function(a){return Z().useRef(a)},exports.useState=function(a){return Z().useState(a)},exports.version="16.14.0"},"../react/node_modules/react/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("../react/node_modules/react/cjs/react.production.min.js")}}]);